/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// AbridgedVideoView struct for AbridgedVideoView
type AbridgedVideoView struct {
	Id *string `json:"id,omitempty"`
	ViewerOsFamily *string `json:"viewer_os_family,omitempty"`
	ViewerApplicationName *string `json:"viewer_application_name,omitempty"`
	VideoTitle *string `json:"video_title,omitempty"`
	TotalRowCount *int64 `json:"total_row_count,omitempty"`
	PlayerErrorMessage *string `json:"player_error_message,omitempty"`
	PlayerErrorCode *string `json:"player_error_code,omitempty"`
	ErrorTypeId *int32 `json:"error_type_id,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	ViewStart *string `json:"view_start,omitempty"`
	ViewEnd *string `json:"view_end,omitempty"`
}

// NewAbridgedVideoView instantiates a new AbridgedVideoView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbridgedVideoView() *AbridgedVideoView {
	this := AbridgedVideoView{}
	return &this
}

// NewAbridgedVideoViewWithDefaults instantiates a new AbridgedVideoView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbridgedVideoViewWithDefaults() *AbridgedVideoView {
	this := AbridgedVideoView{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AbridgedVideoView) SetId(v string) {
	o.Id = &v
}

// GetViewerOsFamily returns the ViewerOsFamily field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetViewerOsFamily() string {
	if o == nil || o.ViewerOsFamily == nil {
		var ret string
		return ret
	}
	return *o.ViewerOsFamily
}

// GetViewerOsFamilyOk returns a tuple with the ViewerOsFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetViewerOsFamilyOk() (*string, bool) {
	if o == nil || o.ViewerOsFamily == nil {
		return nil, false
	}
	return o.ViewerOsFamily, true
}

// HasViewerOsFamily returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasViewerOsFamily() bool {
	if o != nil && o.ViewerOsFamily != nil {
		return true
	}

	return false
}

// SetViewerOsFamily gets a reference to the given string and assigns it to the ViewerOsFamily field.
func (o *AbridgedVideoView) SetViewerOsFamily(v string) {
	o.ViewerOsFamily = &v
}

// GetViewerApplicationName returns the ViewerApplicationName field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetViewerApplicationName() string {
	if o == nil || o.ViewerApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ViewerApplicationName
}

// GetViewerApplicationNameOk returns a tuple with the ViewerApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetViewerApplicationNameOk() (*string, bool) {
	if o == nil || o.ViewerApplicationName == nil {
		return nil, false
	}
	return o.ViewerApplicationName, true
}

// HasViewerApplicationName returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasViewerApplicationName() bool {
	if o != nil && o.ViewerApplicationName != nil {
		return true
	}

	return false
}

// SetViewerApplicationName gets a reference to the given string and assigns it to the ViewerApplicationName field.
func (o *AbridgedVideoView) SetViewerApplicationName(v string) {
	o.ViewerApplicationName = &v
}

// GetVideoTitle returns the VideoTitle field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetVideoTitle() string {
	if o == nil || o.VideoTitle == nil {
		var ret string
		return ret
	}
	return *o.VideoTitle
}

// GetVideoTitleOk returns a tuple with the VideoTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetVideoTitleOk() (*string, bool) {
	if o == nil || o.VideoTitle == nil {
		return nil, false
	}
	return o.VideoTitle, true
}

// HasVideoTitle returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasVideoTitle() bool {
	if o != nil && o.VideoTitle != nil {
		return true
	}

	return false
}

// SetVideoTitle gets a reference to the given string and assigns it to the VideoTitle field.
func (o *AbridgedVideoView) SetVideoTitle(v string) {
	o.VideoTitle = &v
}

// GetTotalRowCount returns the TotalRowCount field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetTotalRowCount() int64 {
	if o == nil || o.TotalRowCount == nil {
		var ret int64
		return ret
	}
	return *o.TotalRowCount
}

// GetTotalRowCountOk returns a tuple with the TotalRowCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetTotalRowCountOk() (*int64, bool) {
	if o == nil || o.TotalRowCount == nil {
		return nil, false
	}
	return o.TotalRowCount, true
}

// HasTotalRowCount returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasTotalRowCount() bool {
	if o != nil && o.TotalRowCount != nil {
		return true
	}

	return false
}

// SetTotalRowCount gets a reference to the given int64 and assigns it to the TotalRowCount field.
func (o *AbridgedVideoView) SetTotalRowCount(v int64) {
	o.TotalRowCount = &v
}

// GetPlayerErrorMessage returns the PlayerErrorMessage field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetPlayerErrorMessage() string {
	if o == nil || o.PlayerErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.PlayerErrorMessage
}

// GetPlayerErrorMessageOk returns a tuple with the PlayerErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetPlayerErrorMessageOk() (*string, bool) {
	if o == nil || o.PlayerErrorMessage == nil {
		return nil, false
	}
	return o.PlayerErrorMessage, true
}

// HasPlayerErrorMessage returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasPlayerErrorMessage() bool {
	if o != nil && o.PlayerErrorMessage != nil {
		return true
	}

	return false
}

// SetPlayerErrorMessage gets a reference to the given string and assigns it to the PlayerErrorMessage field.
func (o *AbridgedVideoView) SetPlayerErrorMessage(v string) {
	o.PlayerErrorMessage = &v
}

// GetPlayerErrorCode returns the PlayerErrorCode field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetPlayerErrorCode() string {
	if o == nil || o.PlayerErrorCode == nil {
		var ret string
		return ret
	}
	return *o.PlayerErrorCode
}

// GetPlayerErrorCodeOk returns a tuple with the PlayerErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetPlayerErrorCodeOk() (*string, bool) {
	if o == nil || o.PlayerErrorCode == nil {
		return nil, false
	}
	return o.PlayerErrorCode, true
}

// HasPlayerErrorCode returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasPlayerErrorCode() bool {
	if o != nil && o.PlayerErrorCode != nil {
		return true
	}

	return false
}

// SetPlayerErrorCode gets a reference to the given string and assigns it to the PlayerErrorCode field.
func (o *AbridgedVideoView) SetPlayerErrorCode(v string) {
	o.PlayerErrorCode = &v
}

// GetErrorTypeId returns the ErrorTypeId field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetErrorTypeId() int32 {
	if o == nil || o.ErrorTypeId == nil {
		var ret int32
		return ret
	}
	return *o.ErrorTypeId
}

// GetErrorTypeIdOk returns a tuple with the ErrorTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetErrorTypeIdOk() (*int32, bool) {
	if o == nil || o.ErrorTypeId == nil {
		return nil, false
	}
	return o.ErrorTypeId, true
}

// HasErrorTypeId returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasErrorTypeId() bool {
	if o != nil && o.ErrorTypeId != nil {
		return true
	}

	return false
}

// SetErrorTypeId gets a reference to the given int32 and assigns it to the ErrorTypeId field.
func (o *AbridgedVideoView) SetErrorTypeId(v int32) {
	o.ErrorTypeId = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *AbridgedVideoView) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetViewStart returns the ViewStart field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetViewStart() string {
	if o == nil || o.ViewStart == nil {
		var ret string
		return ret
	}
	return *o.ViewStart
}

// GetViewStartOk returns a tuple with the ViewStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetViewStartOk() (*string, bool) {
	if o == nil || o.ViewStart == nil {
		return nil, false
	}
	return o.ViewStart, true
}

// HasViewStart returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasViewStart() bool {
	if o != nil && o.ViewStart != nil {
		return true
	}

	return false
}

// SetViewStart gets a reference to the given string and assigns it to the ViewStart field.
func (o *AbridgedVideoView) SetViewStart(v string) {
	o.ViewStart = &v
}

// GetViewEnd returns the ViewEnd field value if set, zero value otherwise.
func (o *AbridgedVideoView) GetViewEnd() string {
	if o == nil || o.ViewEnd == nil {
		var ret string
		return ret
	}
	return *o.ViewEnd
}

// GetViewEndOk returns a tuple with the ViewEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbridgedVideoView) GetViewEndOk() (*string, bool) {
	if o == nil || o.ViewEnd == nil {
		return nil, false
	}
	return o.ViewEnd, true
}

// HasViewEnd returns a boolean if a field has been set.
func (o *AbridgedVideoView) HasViewEnd() bool {
	if o != nil && o.ViewEnd != nil {
		return true
	}

	return false
}

// SetViewEnd gets a reference to the given string and assigns it to the ViewEnd field.
func (o *AbridgedVideoView) SetViewEnd(v string) {
	o.ViewEnd = &v
}

func (o AbridgedVideoView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ViewerOsFamily != nil {
		toSerialize["viewer_os_family"] = o.ViewerOsFamily
	}
	if o.ViewerApplicationName != nil {
		toSerialize["viewer_application_name"] = o.ViewerApplicationName
	}
	if o.VideoTitle != nil {
		toSerialize["video_title"] = o.VideoTitle
	}
	if o.TotalRowCount != nil {
		toSerialize["total_row_count"] = o.TotalRowCount
	}
	if o.PlayerErrorMessage != nil {
		toSerialize["player_error_message"] = o.PlayerErrorMessage
	}
	if o.PlayerErrorCode != nil {
		toSerialize["player_error_code"] = o.PlayerErrorCode
	}
	if o.ErrorTypeId != nil {
		toSerialize["error_type_id"] = o.ErrorTypeId
	}
	if o.CountryCode != nil {
		toSerialize["country_code"] = o.CountryCode
	}
	if o.ViewStart != nil {
		toSerialize["view_start"] = o.ViewStart
	}
	if o.ViewEnd != nil {
		toSerialize["view_end"] = o.ViewEnd
	}
	return json.Marshal(toSerialize)
}

type NullableAbridgedVideoView struct {
	value *AbridgedVideoView
	isSet bool
}

func (v NullableAbridgedVideoView) Get() *AbridgedVideoView {
	return v.value
}

func (v *NullableAbridgedVideoView) Set(val *AbridgedVideoView) {
	v.value = val
	v.isSet = true
}

func (v NullableAbridgedVideoView) IsSet() bool {
	return v.isSet
}

func (v *NullableAbridgedVideoView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbridgedVideoView(val *AbridgedVideoView) *NullableAbridgedVideoView {
	return &NullableAbridgedVideoView{value: val, isSet: true}
}

func (v NullableAbridgedVideoView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbridgedVideoView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


