/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// CreateAssetRequest struct for CreateAssetRequest
type CreateAssetRequest struct {
	// An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.
	Input *[]InputSettings `json:"input,omitempty"`
	// An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\"public\"` (anyone with the playback URL can stream the asset). And `\"signed\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.
	PlaybackPolicy *[]PlaybackPolicy `json:"playback_policy,omitempty"`
	PerTitleEncode *bool `json:"per_title_encode,omitempty"`
	// Arbitrary metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**.
	Passthrough *string `json:"passthrough,omitempty"`
	// Specify what level (if any) of support for mp4 playback. In most cases you should use our default HLS-based streaming playback ({playback_id}.m3u8) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
	Mp4Support *string `json:"mp4_support,omitempty"`
	// Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.
	NormalizeAudio *bool `json:"normalize_audio,omitempty"`
	// Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
	MasterAccess *string `json:"master_access,omitempty"`
	// Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs.
	Test *bool `json:"test,omitempty"`
}

// NewCreateAssetRequest instantiates a new CreateAssetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetRequest() *CreateAssetRequest {
	this := CreateAssetRequest{}
	var normalizeAudio bool = false
	this.NormalizeAudio = &normalizeAudio
	return &this
}

// NewCreateAssetRequestWithDefaults instantiates a new CreateAssetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetRequestWithDefaults() *CreateAssetRequest {
	this := CreateAssetRequest{}
	var normalizeAudio bool = false
	this.NormalizeAudio = &normalizeAudio
	return &this
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetInput() []InputSettings {
	if o == nil || o.Input == nil {
		var ret []InputSettings
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetInputOk() (*[]InputSettings, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given []InputSettings and assigns it to the Input field.
func (o *CreateAssetRequest) SetInput(v []InputSettings) {
	o.Input = &v
}

// GetPlaybackPolicy returns the PlaybackPolicy field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetPlaybackPolicy() []PlaybackPolicy {
	if o == nil || o.PlaybackPolicy == nil {
		var ret []PlaybackPolicy
		return ret
	}
	return *o.PlaybackPolicy
}

// GetPlaybackPolicyOk returns a tuple with the PlaybackPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetPlaybackPolicyOk() (*[]PlaybackPolicy, bool) {
	if o == nil || o.PlaybackPolicy == nil {
		return nil, false
	}
	return o.PlaybackPolicy, true
}

// HasPlaybackPolicy returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasPlaybackPolicy() bool {
	if o != nil && o.PlaybackPolicy != nil {
		return true
	}

	return false
}

// SetPlaybackPolicy gets a reference to the given []PlaybackPolicy and assigns it to the PlaybackPolicy field.
func (o *CreateAssetRequest) SetPlaybackPolicy(v []PlaybackPolicy) {
	o.PlaybackPolicy = &v
}

// GetPerTitleEncode returns the PerTitleEncode field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetPerTitleEncode() bool {
	if o == nil || o.PerTitleEncode == nil {
		var ret bool
		return ret
	}
	return *o.PerTitleEncode
}

// GetPerTitleEncodeOk returns a tuple with the PerTitleEncode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetPerTitleEncodeOk() (*bool, bool) {
	if o == nil || o.PerTitleEncode == nil {
		return nil, false
	}
	return o.PerTitleEncode, true
}

// HasPerTitleEncode returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasPerTitleEncode() bool {
	if o != nil && o.PerTitleEncode != nil {
		return true
	}

	return false
}

// SetPerTitleEncode gets a reference to the given bool and assigns it to the PerTitleEncode field.
func (o *CreateAssetRequest) SetPerTitleEncode(v bool) {
	o.PerTitleEncode = &v
}

// GetPassthrough returns the Passthrough field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetPassthrough() string {
	if o == nil || o.Passthrough == nil {
		var ret string
		return ret
	}
	return *o.Passthrough
}

// GetPassthroughOk returns a tuple with the Passthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetPassthroughOk() (*string, bool) {
	if o == nil || o.Passthrough == nil {
		return nil, false
	}
	return o.Passthrough, true
}

// HasPassthrough returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasPassthrough() bool {
	if o != nil && o.Passthrough != nil {
		return true
	}

	return false
}

// SetPassthrough gets a reference to the given string and assigns it to the Passthrough field.
func (o *CreateAssetRequest) SetPassthrough(v string) {
	o.Passthrough = &v
}

// GetMp4Support returns the Mp4Support field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetMp4Support() string {
	if o == nil || o.Mp4Support == nil {
		var ret string
		return ret
	}
	return *o.Mp4Support
}

// GetMp4SupportOk returns a tuple with the Mp4Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetMp4SupportOk() (*string, bool) {
	if o == nil || o.Mp4Support == nil {
		return nil, false
	}
	return o.Mp4Support, true
}

// HasMp4Support returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasMp4Support() bool {
	if o != nil && o.Mp4Support != nil {
		return true
	}

	return false
}

// SetMp4Support gets a reference to the given string and assigns it to the Mp4Support field.
func (o *CreateAssetRequest) SetMp4Support(v string) {
	o.Mp4Support = &v
}

// GetNormalizeAudio returns the NormalizeAudio field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetNormalizeAudio() bool {
	if o == nil || o.NormalizeAudio == nil {
		var ret bool
		return ret
	}
	return *o.NormalizeAudio
}

// GetNormalizeAudioOk returns a tuple with the NormalizeAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetNormalizeAudioOk() (*bool, bool) {
	if o == nil || o.NormalizeAudio == nil {
		return nil, false
	}
	return o.NormalizeAudio, true
}

// HasNormalizeAudio returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasNormalizeAudio() bool {
	if o != nil && o.NormalizeAudio != nil {
		return true
	}

	return false
}

// SetNormalizeAudio gets a reference to the given bool and assigns it to the NormalizeAudio field.
func (o *CreateAssetRequest) SetNormalizeAudio(v bool) {
	o.NormalizeAudio = &v
}

// GetMasterAccess returns the MasterAccess field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetMasterAccess() string {
	if o == nil || o.MasterAccess == nil {
		var ret string
		return ret
	}
	return *o.MasterAccess
}

// GetMasterAccessOk returns a tuple with the MasterAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetMasterAccessOk() (*string, bool) {
	if o == nil || o.MasterAccess == nil {
		return nil, false
	}
	return o.MasterAccess, true
}

// HasMasterAccess returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasMasterAccess() bool {
	if o != nil && o.MasterAccess != nil {
		return true
	}

	return false
}

// SetMasterAccess gets a reference to the given string and assigns it to the MasterAccess field.
func (o *CreateAssetRequest) SetMasterAccess(v string) {
	o.MasterAccess = &v
}

// GetTest returns the Test field value if set, zero value otherwise.
func (o *CreateAssetRequest) GetTest() bool {
	if o == nil || o.Test == nil {
		var ret bool
		return ret
	}
	return *o.Test
}

// GetTestOk returns a tuple with the Test field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequest) GetTestOk() (*bool, bool) {
	if o == nil || o.Test == nil {
		return nil, false
	}
	return o.Test, true
}

// HasTest returns a boolean if a field has been set.
func (o *CreateAssetRequest) HasTest() bool {
	if o != nil && o.Test != nil {
		return true
	}

	return false
}

// SetTest gets a reference to the given bool and assigns it to the Test field.
func (o *CreateAssetRequest) SetTest(v bool) {
	o.Test = &v
}

func (o CreateAssetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.PlaybackPolicy != nil {
		toSerialize["playback_policy"] = o.PlaybackPolicy
	}
	if o.PerTitleEncode != nil {
		toSerialize["per_title_encode"] = o.PerTitleEncode
	}
	if o.Passthrough != nil {
		toSerialize["passthrough"] = o.Passthrough
	}
	if o.Mp4Support != nil {
		toSerialize["mp4_support"] = o.Mp4Support
	}
	if o.NormalizeAudio != nil {
		toSerialize["normalize_audio"] = o.NormalizeAudio
	}
	if o.MasterAccess != nil {
		toSerialize["master_access"] = o.MasterAccess
	}
	if o.Test != nil {
		toSerialize["test"] = o.Test
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAssetRequest struct {
	value *CreateAssetRequest
	isSet bool
}

func (v NullableCreateAssetRequest) Get() *CreateAssetRequest {
	return v.value
}

func (v *NullableCreateAssetRequest) Set(val *CreateAssetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetRequest(val *CreateAssetRequest) *NullableCreateAssetRequest {
	return &NullableCreateAssetRequest{value: val, isSet: true}
}

func (v NullableCreateAssetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


