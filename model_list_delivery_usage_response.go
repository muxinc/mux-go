/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// ListDeliveryUsageResponse struct for ListDeliveryUsageResponse
type ListDeliveryUsageResponse struct {
	Data *[]DeliveryReport `json:"data,omitempty"`
	TotalRowCount *int64 `json:"total_row_count,omitempty"`
	Timeframe *[]int64 `json:"timeframe,omitempty"`
	// Number of assets returned in this response. Default value is 100.
	Limit *int64 `json:"limit,omitempty"`
}

// NewListDeliveryUsageResponse instantiates a new ListDeliveryUsageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDeliveryUsageResponse() *ListDeliveryUsageResponse {
	this := ListDeliveryUsageResponse{}
	return &this
}

// NewListDeliveryUsageResponseWithDefaults instantiates a new ListDeliveryUsageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDeliveryUsageResponseWithDefaults() *ListDeliveryUsageResponse {
	this := ListDeliveryUsageResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListDeliveryUsageResponse) GetData() []DeliveryReport {
	if o == nil || o.Data == nil {
		var ret []DeliveryReport
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeliveryUsageResponse) GetDataOk() (*[]DeliveryReport, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListDeliveryUsageResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []DeliveryReport and assigns it to the Data field.
func (o *ListDeliveryUsageResponse) SetData(v []DeliveryReport) {
	o.Data = &v
}

// GetTotalRowCount returns the TotalRowCount field value if set, zero value otherwise.
func (o *ListDeliveryUsageResponse) GetTotalRowCount() int64 {
	if o == nil || o.TotalRowCount == nil {
		var ret int64
		return ret
	}
	return *o.TotalRowCount
}

// GetTotalRowCountOk returns a tuple with the TotalRowCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeliveryUsageResponse) GetTotalRowCountOk() (*int64, bool) {
	if o == nil || o.TotalRowCount == nil {
		return nil, false
	}
	return o.TotalRowCount, true
}

// HasTotalRowCount returns a boolean if a field has been set.
func (o *ListDeliveryUsageResponse) HasTotalRowCount() bool {
	if o != nil && o.TotalRowCount != nil {
		return true
	}

	return false
}

// SetTotalRowCount gets a reference to the given int64 and assigns it to the TotalRowCount field.
func (o *ListDeliveryUsageResponse) SetTotalRowCount(v int64) {
	o.TotalRowCount = &v
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise.
func (o *ListDeliveryUsageResponse) GetTimeframe() []int64 {
	if o == nil || o.Timeframe == nil {
		var ret []int64
		return ret
	}
	return *o.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeliveryUsageResponse) GetTimeframeOk() (*[]int64, bool) {
	if o == nil || o.Timeframe == nil {
		return nil, false
	}
	return o.Timeframe, true
}

// HasTimeframe returns a boolean if a field has been set.
func (o *ListDeliveryUsageResponse) HasTimeframe() bool {
	if o != nil && o.Timeframe != nil {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given []int64 and assigns it to the Timeframe field.
func (o *ListDeliveryUsageResponse) SetTimeframe(v []int64) {
	o.Timeframe = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListDeliveryUsageResponse) GetLimit() int64 {
	if o == nil || o.Limit == nil {
		var ret int64
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeliveryUsageResponse) GetLimitOk() (*int64, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ListDeliveryUsageResponse) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int64 and assigns it to the Limit field.
func (o *ListDeliveryUsageResponse) SetLimit(v int64) {
	o.Limit = &v
}

func (o ListDeliveryUsageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.TotalRowCount != nil {
		toSerialize["total_row_count"] = o.TotalRowCount
	}
	if o.Timeframe != nil {
		toSerialize["timeframe"] = o.Timeframe
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableListDeliveryUsageResponse struct {
	value *ListDeliveryUsageResponse
	isSet bool
}

func (v NullableListDeliveryUsageResponse) Get() *ListDeliveryUsageResponse {
	return v.value
}

func (v *NullableListDeliveryUsageResponse) Set(val *ListDeliveryUsageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDeliveryUsageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDeliveryUsageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDeliveryUsageResponse(val *ListDeliveryUsageResponse) *NullableListDeliveryUsageResponse {
	return &NullableListDeliveryUsageResponse{value: val, isSet: true}
}

func (v NullableListDeliveryUsageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDeliveryUsageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


