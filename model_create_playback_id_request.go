/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// CreatePlaybackIDRequest struct for CreatePlaybackIDRequest
type CreatePlaybackIDRequest struct {
	Policy *PlaybackPolicy `json:"policy,omitempty"`
}

// NewCreatePlaybackIDRequest instantiates a new CreatePlaybackIDRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePlaybackIDRequest() *CreatePlaybackIDRequest {
	this := CreatePlaybackIDRequest{}
	return &this
}

// NewCreatePlaybackIDRequestWithDefaults instantiates a new CreatePlaybackIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePlaybackIDRequestWithDefaults() *CreatePlaybackIDRequest {
	this := CreatePlaybackIDRequest{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *CreatePlaybackIDRequest) GetPolicy() PlaybackPolicy {
	if o == nil || o.Policy == nil {
		var ret PlaybackPolicy
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePlaybackIDRequest) GetPolicyOk() (*PlaybackPolicy, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *CreatePlaybackIDRequest) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given PlaybackPolicy and assigns it to the Policy field.
func (o *CreatePlaybackIDRequest) SetPolicy(v PlaybackPolicy) {
	o.Policy = &v
}

func (o CreatePlaybackIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePlaybackIDRequest struct {
	value *CreatePlaybackIDRequest
	isSet bool
}

func (v NullableCreatePlaybackIDRequest) Get() *CreatePlaybackIDRequest {
	return v.value
}

func (v *NullableCreatePlaybackIDRequest) Set(val *CreatePlaybackIDRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePlaybackIDRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePlaybackIDRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePlaybackIDRequest(val *CreatePlaybackIDRequest) *NullableCreatePlaybackIDRequest {
	return &NullableCreatePlaybackIDRequest{value: val, isSet: true}
}

func (v NullableCreatePlaybackIDRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePlaybackIDRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


