/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// CreateTrackRequest struct for CreateTrackRequest
type CreateTrackRequest struct {
	Url string `json:"url"`
	Type string `json:"type"`
	TextType string `json:"text_type"`
	// The language code value must be a valid BCP 47 specification compliant value. For example, en for English or en-US for the US version of English.
	LanguageCode string `json:"language_code"`
	// The name of the track containing a human-readable description. This value must be unqiue across all the text type and subtitles text type tracks. HLS manifest will associate subtitle text track with this value. For example, set the value to \"English\" for subtitles text track with language_code as en-US. If this parameter is not included, Mux will auto-populate based on the language_code value.
	Name *string `json:"name,omitempty"`
	// Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH).
	ClosedCaptions *bool `json:"closed_captions,omitempty"`
	// Arbitrary metadata set for the track either when creating the asset or track.
	Passthrough *string `json:"passthrough,omitempty"`
}

// NewCreateTrackRequest instantiates a new CreateTrackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTrackRequest(url string, type_ string, textType string, languageCode string, ) *CreateTrackRequest {
	this := CreateTrackRequest{}
	this.Url = url
	this.Type = type_
	this.TextType = textType
	this.LanguageCode = languageCode
	return &this
}

// NewCreateTrackRequestWithDefaults instantiates a new CreateTrackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTrackRequestWithDefaults() *CreateTrackRequest {
	this := CreateTrackRequest{}
	return &this
}

// GetUrl returns the Url field value
func (o *CreateTrackRequest) GetUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CreateTrackRequest) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CreateTrackRequest) SetUrl(v string) {
	o.Url = v
}

// GetType returns the Type field value
func (o *CreateTrackRequest) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateTrackRequest) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateTrackRequest) SetType(v string) {
	o.Type = v
}

// GetTextType returns the TextType field value
func (o *CreateTrackRequest) GetTextType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TextType
}

// GetTextTypeOk returns a tuple with the TextType field value
// and a boolean to check if the value has been set.
func (o *CreateTrackRequest) GetTextTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TextType, true
}

// SetTextType sets field value
func (o *CreateTrackRequest) SetTextType(v string) {
	o.TextType = v
}

// GetLanguageCode returns the LanguageCode field value
func (o *CreateTrackRequest) GetLanguageCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LanguageCode
}

// GetLanguageCodeOk returns a tuple with the LanguageCode field value
// and a boolean to check if the value has been set.
func (o *CreateTrackRequest) GetLanguageCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LanguageCode, true
}

// SetLanguageCode sets field value
func (o *CreateTrackRequest) SetLanguageCode(v string) {
	o.LanguageCode = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTrackRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTrackRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateTrackRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTrackRequest) SetName(v string) {
	o.Name = &v
}

// GetClosedCaptions returns the ClosedCaptions field value if set, zero value otherwise.
func (o *CreateTrackRequest) GetClosedCaptions() bool {
	if o == nil || o.ClosedCaptions == nil {
		var ret bool
		return ret
	}
	return *o.ClosedCaptions
}

// GetClosedCaptionsOk returns a tuple with the ClosedCaptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTrackRequest) GetClosedCaptionsOk() (*bool, bool) {
	if o == nil || o.ClosedCaptions == nil {
		return nil, false
	}
	return o.ClosedCaptions, true
}

// HasClosedCaptions returns a boolean if a field has been set.
func (o *CreateTrackRequest) HasClosedCaptions() bool {
	if o != nil && o.ClosedCaptions != nil {
		return true
	}

	return false
}

// SetClosedCaptions gets a reference to the given bool and assigns it to the ClosedCaptions field.
func (o *CreateTrackRequest) SetClosedCaptions(v bool) {
	o.ClosedCaptions = &v
}

// GetPassthrough returns the Passthrough field value if set, zero value otherwise.
func (o *CreateTrackRequest) GetPassthrough() string {
	if o == nil || o.Passthrough == nil {
		var ret string
		return ret
	}
	return *o.Passthrough
}

// GetPassthroughOk returns a tuple with the Passthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTrackRequest) GetPassthroughOk() (*string, bool) {
	if o == nil || o.Passthrough == nil {
		return nil, false
	}
	return o.Passthrough, true
}

// HasPassthrough returns a boolean if a field has been set.
func (o *CreateTrackRequest) HasPassthrough() bool {
	if o != nil && o.Passthrough != nil {
		return true
	}

	return false
}

// SetPassthrough gets a reference to the given string and assigns it to the Passthrough field.
func (o *CreateTrackRequest) SetPassthrough(v string) {
	o.Passthrough = &v
}

func (o CreateTrackRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["text_type"] = o.TextType
	}
	if true {
		toSerialize["language_code"] = o.LanguageCode
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ClosedCaptions != nil {
		toSerialize["closed_captions"] = o.ClosedCaptions
	}
	if o.Passthrough != nil {
		toSerialize["passthrough"] = o.Passthrough
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTrackRequest struct {
	value *CreateTrackRequest
	isSet bool
}

func (v NullableCreateTrackRequest) Get() *CreateTrackRequest {
	return v.value
}

func (v *NullableCreateTrackRequest) Set(val *CreateTrackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTrackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTrackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTrackRequest(val *CreateTrackRequest) *NullableCreateTrackRequest {
	return &NullableCreateTrackRequest{value: val, isSet: true}
}

func (v NullableCreateTrackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTrackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


