/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// DeliveryReport struct for DeliveryReport
type DeliveryReport struct {
	// Unique identifier for the live stream that created the asset.
	LiveStreamId *string `json:"live_stream_id,omitempty"`
	// Unique identifier for the asset.
	AssetId *string `json:"asset_id,omitempty"`
	// The `passthrough` value for the asset.
	Passthrough *string `json:"passthrough,omitempty"`
	// Time at which the asset was created. Measured in seconds since the Unix epoch.
	CreatedAt *string `json:"created_at,omitempty"`
	// If exists, time at which the asset was deleted. Measured in seconds since the Unix epoch.
	DeletedAt *string `json:"deleted_at,omitempty"`
	// The state of the asset.
	AssetState *string `json:"asset_state,omitempty"`
	// The duration of the asset in seconds.
	AssetDuration *float64 `json:"asset_duration,omitempty"`
	// Total number of delivered seconds during this time window.
	DeliveredSeconds *float64 `json:"delivered_seconds,omitempty"`
}

// NewDeliveryReport instantiates a new DeliveryReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryReport() *DeliveryReport {
	this := DeliveryReport{}
	return &this
}

// NewDeliveryReportWithDefaults instantiates a new DeliveryReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryReportWithDefaults() *DeliveryReport {
	this := DeliveryReport{}
	return &this
}

// GetLiveStreamId returns the LiveStreamId field value if set, zero value otherwise.
func (o *DeliveryReport) GetLiveStreamId() string {
	if o == nil || o.LiveStreamId == nil {
		var ret string
		return ret
	}
	return *o.LiveStreamId
}

// GetLiveStreamIdOk returns a tuple with the LiveStreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetLiveStreamIdOk() (*string, bool) {
	if o == nil || o.LiveStreamId == nil {
		return nil, false
	}
	return o.LiveStreamId, true
}

// HasLiveStreamId returns a boolean if a field has been set.
func (o *DeliveryReport) HasLiveStreamId() bool {
	if o != nil && o.LiveStreamId != nil {
		return true
	}

	return false
}

// SetLiveStreamId gets a reference to the given string and assigns it to the LiveStreamId field.
func (o *DeliveryReport) SetLiveStreamId(v string) {
	o.LiveStreamId = &v
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *DeliveryReport) GetAssetId() string {
	if o == nil || o.AssetId == nil {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetAssetIdOk() (*string, bool) {
	if o == nil || o.AssetId == nil {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *DeliveryReport) HasAssetId() bool {
	if o != nil && o.AssetId != nil {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *DeliveryReport) SetAssetId(v string) {
	o.AssetId = &v
}

// GetPassthrough returns the Passthrough field value if set, zero value otherwise.
func (o *DeliveryReport) GetPassthrough() string {
	if o == nil || o.Passthrough == nil {
		var ret string
		return ret
	}
	return *o.Passthrough
}

// GetPassthroughOk returns a tuple with the Passthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetPassthroughOk() (*string, bool) {
	if o == nil || o.Passthrough == nil {
		return nil, false
	}
	return o.Passthrough, true
}

// HasPassthrough returns a boolean if a field has been set.
func (o *DeliveryReport) HasPassthrough() bool {
	if o != nil && o.Passthrough != nil {
		return true
	}

	return false
}

// SetPassthrough gets a reference to the given string and assigns it to the Passthrough field.
func (o *DeliveryReport) SetPassthrough(v string) {
	o.Passthrough = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DeliveryReport) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DeliveryReport) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DeliveryReport) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *DeliveryReport) GetDeletedAt() string {
	if o == nil || o.DeletedAt == nil {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetDeletedAtOk() (*string, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *DeliveryReport) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *DeliveryReport) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetAssetState returns the AssetState field value if set, zero value otherwise.
func (o *DeliveryReport) GetAssetState() string {
	if o == nil || o.AssetState == nil {
		var ret string
		return ret
	}
	return *o.AssetState
}

// GetAssetStateOk returns a tuple with the AssetState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetAssetStateOk() (*string, bool) {
	if o == nil || o.AssetState == nil {
		return nil, false
	}
	return o.AssetState, true
}

// HasAssetState returns a boolean if a field has been set.
func (o *DeliveryReport) HasAssetState() bool {
	if o != nil && o.AssetState != nil {
		return true
	}

	return false
}

// SetAssetState gets a reference to the given string and assigns it to the AssetState field.
func (o *DeliveryReport) SetAssetState(v string) {
	o.AssetState = &v
}

// GetAssetDuration returns the AssetDuration field value if set, zero value otherwise.
func (o *DeliveryReport) GetAssetDuration() float64 {
	if o == nil || o.AssetDuration == nil {
		var ret float64
		return ret
	}
	return *o.AssetDuration
}

// GetAssetDurationOk returns a tuple with the AssetDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetAssetDurationOk() (*float64, bool) {
	if o == nil || o.AssetDuration == nil {
		return nil, false
	}
	return o.AssetDuration, true
}

// HasAssetDuration returns a boolean if a field has been set.
func (o *DeliveryReport) HasAssetDuration() bool {
	if o != nil && o.AssetDuration != nil {
		return true
	}

	return false
}

// SetAssetDuration gets a reference to the given float64 and assigns it to the AssetDuration field.
func (o *DeliveryReport) SetAssetDuration(v float64) {
	o.AssetDuration = &v
}

// GetDeliveredSeconds returns the DeliveredSeconds field value if set, zero value otherwise.
func (o *DeliveryReport) GetDeliveredSeconds() float64 {
	if o == nil || o.DeliveredSeconds == nil {
		var ret float64
		return ret
	}
	return *o.DeliveredSeconds
}

// GetDeliveredSecondsOk returns a tuple with the DeliveredSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryReport) GetDeliveredSecondsOk() (*float64, bool) {
	if o == nil || o.DeliveredSeconds == nil {
		return nil, false
	}
	return o.DeliveredSeconds, true
}

// HasDeliveredSeconds returns a boolean if a field has been set.
func (o *DeliveryReport) HasDeliveredSeconds() bool {
	if o != nil && o.DeliveredSeconds != nil {
		return true
	}

	return false
}

// SetDeliveredSeconds gets a reference to the given float64 and assigns it to the DeliveredSeconds field.
func (o *DeliveryReport) SetDeliveredSeconds(v float64) {
	o.DeliveredSeconds = &v
}

func (o DeliveryReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LiveStreamId != nil {
		toSerialize["live_stream_id"] = o.LiveStreamId
	}
	if o.AssetId != nil {
		toSerialize["asset_id"] = o.AssetId
	}
	if o.Passthrough != nil {
		toSerialize["passthrough"] = o.Passthrough
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if o.AssetState != nil {
		toSerialize["asset_state"] = o.AssetState
	}
	if o.AssetDuration != nil {
		toSerialize["asset_duration"] = o.AssetDuration
	}
	if o.DeliveredSeconds != nil {
		toSerialize["delivered_seconds"] = o.DeliveredSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableDeliveryReport struct {
	value *DeliveryReport
	isSet bool
}

func (v NullableDeliveryReport) Get() *DeliveryReport {
	return v.value
}

func (v *NullableDeliveryReport) Set(val *DeliveryReport) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryReport) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryReport(val *DeliveryReport) *NullableDeliveryReport {
	return &NullableDeliveryReport{value: val, isSet: true}
}

func (v NullableDeliveryReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


