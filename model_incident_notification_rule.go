/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// IncidentNotificationRule struct for IncidentNotificationRule
type IncidentNotificationRule struct {
	Status *string `json:"status,omitempty"`
	Rules *[]NotificationRule `json:"rules,omitempty"`
	PropertyId *string `json:"property_id,omitempty"`
	Id *string `json:"id,omitempty"`
	Action *string `json:"action,omitempty"`
}

// NewIncidentNotificationRule instantiates a new IncidentNotificationRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentNotificationRule() *IncidentNotificationRule {
	this := IncidentNotificationRule{}
	return &this
}

// NewIncidentNotificationRuleWithDefaults instantiates a new IncidentNotificationRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentNotificationRuleWithDefaults() *IncidentNotificationRule {
	this := IncidentNotificationRule{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IncidentNotificationRule) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentNotificationRule) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IncidentNotificationRule) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *IncidentNotificationRule) SetStatus(v string) {
	o.Status = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *IncidentNotificationRule) GetRules() []NotificationRule {
	if o == nil || o.Rules == nil {
		var ret []NotificationRule
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentNotificationRule) GetRulesOk() (*[]NotificationRule, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *IncidentNotificationRule) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []NotificationRule and assigns it to the Rules field.
func (o *IncidentNotificationRule) SetRules(v []NotificationRule) {
	o.Rules = &v
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *IncidentNotificationRule) GetPropertyId() string {
	if o == nil || o.PropertyId == nil {
		var ret string
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentNotificationRule) GetPropertyIdOk() (*string, bool) {
	if o == nil || o.PropertyId == nil {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *IncidentNotificationRule) HasPropertyId() bool {
	if o != nil && o.PropertyId != nil {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given string and assigns it to the PropertyId field.
func (o *IncidentNotificationRule) SetPropertyId(v string) {
	o.PropertyId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IncidentNotificationRule) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentNotificationRule) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IncidentNotificationRule) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IncidentNotificationRule) SetId(v string) {
	o.Id = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *IncidentNotificationRule) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentNotificationRule) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *IncidentNotificationRule) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *IncidentNotificationRule) SetAction(v string) {
	o.Action = &v
}

func (o IncidentNotificationRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.PropertyId != nil {
		toSerialize["property_id"] = o.PropertyId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	return json.Marshal(toSerialize)
}

type NullableIncidentNotificationRule struct {
	value *IncidentNotificationRule
	isSet bool
}

func (v NullableIncidentNotificationRule) Get() *IncidentNotificationRule {
	return v.value
}

func (v *NullableIncidentNotificationRule) Set(val *IncidentNotificationRule) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentNotificationRule) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentNotificationRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentNotificationRule(val *IncidentNotificationRule) *NullableIncidentNotificationRule {
	return &NullableIncidentNotificationRule{value: val, isSet: true}
}

func (v NullableIncidentNotificationRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentNotificationRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


