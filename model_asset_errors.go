/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// AssetErrors Object that describes any errors that happened when processing this asset.
type AssetErrors struct {
	// The type of error that occurred for this asset.
	Type *string `json:"type,omitempty"`
	// Error messages with more details.
	Messages *[]string `json:"messages,omitempty"`
}

// NewAssetErrors instantiates a new AssetErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetErrors() *AssetErrors {
	this := AssetErrors{}
	return &this
}

// NewAssetErrorsWithDefaults instantiates a new AssetErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetErrorsWithDefaults() *AssetErrors {
	this := AssetErrors{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AssetErrors) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetErrors) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AssetErrors) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AssetErrors) SetType(v string) {
	o.Type = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *AssetErrors) GetMessages() []string {
	if o == nil || o.Messages == nil {
		var ret []string
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetErrors) GetMessagesOk() (*[]string, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *AssetErrors) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *AssetErrors) SetMessages(v []string) {
	o.Messages = &v
}

func (o AssetErrors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableAssetErrors struct {
	value *AssetErrors
	isSet bool
}

func (v NullableAssetErrors) Get() *AssetErrors {
	return v.value
}

func (v *NullableAssetErrors) Set(val *AssetErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetErrors(val *AssetErrors) *NullableAssetErrors {
	return &NullableAssetErrors{value: val, isSet: true}
}

func (v NullableAssetErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


