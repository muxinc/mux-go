/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// InputTrack struct for InputTrack
type InputTrack struct {
	Type *string `json:"type,omitempty"`
	Duration *float64 `json:"duration,omitempty"`
	Encoding *string `json:"encoding,omitempty"`
	Width *int64 `json:"width,omitempty"`
	Height *int64 `json:"height,omitempty"`
	FrameRate *float64 `json:"frame_rate,omitempty"`
	SampleRate *int64 `json:"sample_rate,omitempty"`
	SampleSize *int64 `json:"sample_size,omitempty"`
	Channels *int64 `json:"channels,omitempty"`
}

// NewInputTrack instantiates a new InputTrack object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputTrack() *InputTrack {
	this := InputTrack{}
	return &this
}

// NewInputTrackWithDefaults instantiates a new InputTrack object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputTrackWithDefaults() *InputTrack {
	this := InputTrack{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InputTrack) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InputTrack) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InputTrack) SetType(v string) {
	o.Type = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *InputTrack) GetDuration() float64 {
	if o == nil || o.Duration == nil {
		var ret float64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetDurationOk() (*float64, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *InputTrack) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given float64 and assigns it to the Duration field.
func (o *InputTrack) SetDuration(v float64) {
	o.Duration = &v
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *InputTrack) GetEncoding() string {
	if o == nil || o.Encoding == nil {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetEncodingOk() (*string, bool) {
	if o == nil || o.Encoding == nil {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *InputTrack) HasEncoding() bool {
	if o != nil && o.Encoding != nil {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *InputTrack) SetEncoding(v string) {
	o.Encoding = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *InputTrack) GetWidth() int64 {
	if o == nil || o.Width == nil {
		var ret int64
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetWidthOk() (*int64, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *InputTrack) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int64 and assigns it to the Width field.
func (o *InputTrack) SetWidth(v int64) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *InputTrack) GetHeight() int64 {
	if o == nil || o.Height == nil {
		var ret int64
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetHeightOk() (*int64, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *InputTrack) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int64 and assigns it to the Height field.
func (o *InputTrack) SetHeight(v int64) {
	o.Height = &v
}

// GetFrameRate returns the FrameRate field value if set, zero value otherwise.
func (o *InputTrack) GetFrameRate() float64 {
	if o == nil || o.FrameRate == nil {
		var ret float64
		return ret
	}
	return *o.FrameRate
}

// GetFrameRateOk returns a tuple with the FrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetFrameRateOk() (*float64, bool) {
	if o == nil || o.FrameRate == nil {
		return nil, false
	}
	return o.FrameRate, true
}

// HasFrameRate returns a boolean if a field has been set.
func (o *InputTrack) HasFrameRate() bool {
	if o != nil && o.FrameRate != nil {
		return true
	}

	return false
}

// SetFrameRate gets a reference to the given float64 and assigns it to the FrameRate field.
func (o *InputTrack) SetFrameRate(v float64) {
	o.FrameRate = &v
}

// GetSampleRate returns the SampleRate field value if set, zero value otherwise.
func (o *InputTrack) GetSampleRate() int64 {
	if o == nil || o.SampleRate == nil {
		var ret int64
		return ret
	}
	return *o.SampleRate
}

// GetSampleRateOk returns a tuple with the SampleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetSampleRateOk() (*int64, bool) {
	if o == nil || o.SampleRate == nil {
		return nil, false
	}
	return o.SampleRate, true
}

// HasSampleRate returns a boolean if a field has been set.
func (o *InputTrack) HasSampleRate() bool {
	if o != nil && o.SampleRate != nil {
		return true
	}

	return false
}

// SetSampleRate gets a reference to the given int64 and assigns it to the SampleRate field.
func (o *InputTrack) SetSampleRate(v int64) {
	o.SampleRate = &v
}

// GetSampleSize returns the SampleSize field value if set, zero value otherwise.
func (o *InputTrack) GetSampleSize() int64 {
	if o == nil || o.SampleSize == nil {
		var ret int64
		return ret
	}
	return *o.SampleSize
}

// GetSampleSizeOk returns a tuple with the SampleSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetSampleSizeOk() (*int64, bool) {
	if o == nil || o.SampleSize == nil {
		return nil, false
	}
	return o.SampleSize, true
}

// HasSampleSize returns a boolean if a field has been set.
func (o *InputTrack) HasSampleSize() bool {
	if o != nil && o.SampleSize != nil {
		return true
	}

	return false
}

// SetSampleSize gets a reference to the given int64 and assigns it to the SampleSize field.
func (o *InputTrack) SetSampleSize(v int64) {
	o.SampleSize = &v
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *InputTrack) GetChannels() int64 {
	if o == nil || o.Channels == nil {
		var ret int64
		return ret
	}
	return *o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputTrack) GetChannelsOk() (*int64, bool) {
	if o == nil || o.Channels == nil {
		return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *InputTrack) HasChannels() bool {
	if o != nil && o.Channels != nil {
		return true
	}

	return false
}

// SetChannels gets a reference to the given int64 and assigns it to the Channels field.
func (o *InputTrack) SetChannels(v int64) {
	o.Channels = &v
}

func (o InputTrack) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.Encoding != nil {
		toSerialize["encoding"] = o.Encoding
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.FrameRate != nil {
		toSerialize["frame_rate"] = o.FrameRate
	}
	if o.SampleRate != nil {
		toSerialize["sample_rate"] = o.SampleRate
	}
	if o.SampleSize != nil {
		toSerialize["sample_size"] = o.SampleSize
	}
	if o.Channels != nil {
		toSerialize["channels"] = o.Channels
	}
	return json.Marshal(toSerialize)
}

type NullableInputTrack struct {
	value *InputTrack
	isSet bool
}

func (v NullableInputTrack) Get() *InputTrack {
	return v.value
}

func (v *NullableInputTrack) Set(val *InputTrack) {
	v.value = val
	v.isSet = true
}

func (v NullableInputTrack) IsSet() bool {
	return v.isSet
}

func (v *NullableInputTrack) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputTrack(val *InputTrack) *NullableInputTrack {
	return &NullableInputTrack{value: val, isSet: true}
}

func (v NullableInputTrack) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputTrack) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


