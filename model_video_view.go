/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// VideoView struct for VideoView
type VideoView struct {
	ViewTotalUpscaling *string `json:"view_total_upscaling,omitempty"`
	PrerollAdAssetHostname *string `json:"preroll_ad_asset_hostname,omitempty"`
	PlayerSourceDomain *string `json:"player_source_domain,omitempty"`
	Region *string `json:"region,omitempty"`
	ViewerUserAgent *string `json:"viewer_user_agent,omitempty"`
	PrerollRequested *bool `json:"preroll_requested,omitempty"`
	PageType *string `json:"page_type,omitempty"`
	StartupScore *string `json:"startup_score,omitempty"`
	ViewSeekDuration *int64 `json:"view_seek_duration,omitempty"`
	CountryName *string `json:"country_name,omitempty"`
	PlayerSourceHeight *int32 `json:"player_source_height,omitempty"`
	Longitude *string `json:"longitude,omitempty"`
	BufferingCount *int64 `json:"buffering_count,omitempty"`
	VideoDuration *int64 `json:"video_duration,omitempty"`
	PlayerSourceType *string `json:"player_source_type,omitempty"`
	City *string `json:"city,omitempty"`
	ViewId *string `json:"view_id,omitempty"`
	PlatformDescription *string `json:"platform_description,omitempty"`
	VideoStartupPrerollRequestTime *int64 `json:"video_startup_preroll_request_time,omitempty"`
	ViewerDeviceName *string `json:"viewer_device_name,omitempty"`
	VideoSeries *string `json:"video_series,omitempty"`
	ViewerApplicationName *string `json:"viewer_application_name,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	ViewTotalContentPlaybackTime *int64 `json:"view_total_content_playback_time,omitempty"`
	Cdn *string `json:"cdn,omitempty"`
	PlayerInstanceId *string `json:"player_instance_id,omitempty"`
	VideoLanguage *string `json:"video_language,omitempty"`
	PlayerSourceWidth *int32 `json:"player_source_width,omitempty"`
	PlayerErrorMessage *string `json:"player_error_message,omitempty"`
	PlayerMuxPluginVersion *string `json:"player_mux_plugin_version,omitempty"`
	Watched *bool `json:"watched,omitempty"`
	PlaybackScore *string `json:"playback_score,omitempty"`
	PageUrl *string `json:"page_url,omitempty"`
	Metro *string `json:"metro,omitempty"`
	ViewMaxRequestLatency *int64 `json:"view_max_request_latency,omitempty"`
	RequestsForFirstPreroll *int64 `json:"requests_for_first_preroll,omitempty"`
	ViewTotalDownscaling *string `json:"view_total_downscaling,omitempty"`
	Latitude *string `json:"latitude,omitempty"`
	PlayerSourceHostName *string `json:"player_source_host_name,omitempty"`
	InsertedAt *string `json:"inserted_at,omitempty"`
	ViewEnd *string `json:"view_end,omitempty"`
	MuxEmbedVersion *string `json:"mux_embed_version,omitempty"`
	PlayerLanguage *string `json:"player_language,omitempty"`
	PageLoadTime *int64 `json:"page_load_time,omitempty"`
	ViewerDeviceCategory *string `json:"viewer_device_category,omitempty"`
	VideoStartupPrerollLoadTime *int64 `json:"video_startup_preroll_load_time,omitempty"`
	PlayerVersion *string `json:"player_version,omitempty"`
	WatchTime *int64 `json:"watch_time,omitempty"`
	PlayerSourceStreamType *string `json:"player_source_stream_type,omitempty"`
	PrerollAdTagHostname *string `json:"preroll_ad_tag_hostname,omitempty"`
	ViewerDeviceManufacturer *string `json:"viewer_device_manufacturer,omitempty"`
	RebufferingScore *string `json:"rebuffering_score,omitempty"`
	ExperimentName *string `json:"experiment_name,omitempty"`
	ViewerOsVersion *string `json:"viewer_os_version,omitempty"`
	PlayerPreload *bool `json:"player_preload,omitempty"`
	BufferingDuration *int64 `json:"buffering_duration,omitempty"`
	PlayerViewCount *int64 `json:"player_view_count,omitempty"`
	PlayerSoftware *string `json:"player_software,omitempty"`
	PlayerLoadTime *int64 `json:"player_load_time,omitempty"`
	PlatformSummary *string `json:"platform_summary,omitempty"`
	VideoEncodingVariant *string `json:"video_encoding_variant,omitempty"`
	PlayerWidth *int32 `json:"player_width,omitempty"`
	ViewSeekCount *int64 `json:"view_seek_count,omitempty"`
	ViewerExperienceScore *string `json:"viewer_experience_score,omitempty"`
	ViewErrorId *int32 `json:"view_error_id,omitempty"`
	VideoVariantName *string `json:"video_variant_name,omitempty"`
	PrerollPlayed *bool `json:"preroll_played,omitempty"`
	ViewerApplicationEngine *string `json:"viewer_application_engine,omitempty"`
	ViewerOsArchitecture *string `json:"viewer_os_architecture,omitempty"`
	PlayerErrorCode *string `json:"player_error_code,omitempty"`
	BufferingRate *string `json:"buffering_rate,omitempty"`
	Events *[]VideoViewEvent `json:"events,omitempty"`
	PlayerName *string `json:"player_name,omitempty"`
	ViewStart *string `json:"view_start,omitempty"`
	ViewAverageRequestThroughput *int64 `json:"view_average_request_throughput,omitempty"`
	VideoProducer *string `json:"video_producer,omitempty"`
	ErrorTypeId *int32 `json:"error_type_id,omitempty"`
	MuxViewerId *string `json:"mux_viewer_id,omitempty"`
	VideoId *string `json:"video_id,omitempty"`
	ContinentCode *string `json:"continent_code,omitempty"`
	SessionId *string `json:"session_id,omitempty"`
	ExitBeforeVideoStart *bool `json:"exit_before_video_start,omitempty"`
	VideoContentType *string `json:"video_content_type,omitempty"`
	ViewerOsFamily *string `json:"viewer_os_family,omitempty"`
	PlayerPoster *string `json:"player_poster,omitempty"`
	ViewAverageRequestLatency *int64 `json:"view_average_request_latency,omitempty"`
	VideoVariantId *string `json:"video_variant_id,omitempty"`
	PlayerSourceDuration *int64 `json:"player_source_duration,omitempty"`
	PlayerSourceUrl *string `json:"player_source_url,omitempty"`
	MuxApiVersion *string `json:"mux_api_version,omitempty"`
	VideoTitle *string `json:"video_title,omitempty"`
	Id *string `json:"id,omitempty"`
	ShortTime *string `json:"short_time,omitempty"`
	RebufferPercentage *string `json:"rebuffer_percentage,omitempty"`
	TimeToFirstFrame *int64 `json:"time_to_first_frame,omitempty"`
	ViewerUserId *string `json:"viewer_user_id,omitempty"`
	VideoStreamType *string `json:"video_stream_type,omitempty"`
	PlayerStartupTime *int64 `json:"player_startup_time,omitempty"`
	ViewerApplicationVersion *string `json:"viewer_application_version,omitempty"`
	ViewMaxDownscalePercentage *string `json:"view_max_downscale_percentage,omitempty"`
	ViewMaxUpscalePercentage *string `json:"view_max_upscale_percentage,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	UsedFullscreen *bool `json:"used_fullscreen,omitempty"`
	Isp *string `json:"isp,omitempty"`
	PropertyId *int64 `json:"property_id,omitempty"`
	PlayerAutoplay *bool `json:"player_autoplay,omitempty"`
	PlayerHeight *int32 `json:"player_height,omitempty"`
	Asn *int64 `json:"asn,omitempty"`
	AsnName *string `json:"asn_name,omitempty"`
	QualityScore *string `json:"quality_score,omitempty"`
	PlayerSoftwareVersion *string `json:"player_software_version,omitempty"`
	PlayerMuxPluginName *string `json:"player_mux_plugin_name,omitempty"`
}

// NewVideoView instantiates a new VideoView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoView() *VideoView {
	this := VideoView{}
	return &this
}

// NewVideoViewWithDefaults instantiates a new VideoView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoViewWithDefaults() *VideoView {
	this := VideoView{}
	return &this
}

// GetViewTotalUpscaling returns the ViewTotalUpscaling field value if set, zero value otherwise.
func (o *VideoView) GetViewTotalUpscaling() string {
	if o == nil || o.ViewTotalUpscaling == nil {
		var ret string
		return ret
	}
	return *o.ViewTotalUpscaling
}

// GetViewTotalUpscalingOk returns a tuple with the ViewTotalUpscaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewTotalUpscalingOk() (*string, bool) {
	if o == nil || o.ViewTotalUpscaling == nil {
		return nil, false
	}
	return o.ViewTotalUpscaling, true
}

// HasViewTotalUpscaling returns a boolean if a field has been set.
func (o *VideoView) HasViewTotalUpscaling() bool {
	if o != nil && o.ViewTotalUpscaling != nil {
		return true
	}

	return false
}

// SetViewTotalUpscaling gets a reference to the given string and assigns it to the ViewTotalUpscaling field.
func (o *VideoView) SetViewTotalUpscaling(v string) {
	o.ViewTotalUpscaling = &v
}

// GetPrerollAdAssetHostname returns the PrerollAdAssetHostname field value if set, zero value otherwise.
func (o *VideoView) GetPrerollAdAssetHostname() string {
	if o == nil || o.PrerollAdAssetHostname == nil {
		var ret string
		return ret
	}
	return *o.PrerollAdAssetHostname
}

// GetPrerollAdAssetHostnameOk returns a tuple with the PrerollAdAssetHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPrerollAdAssetHostnameOk() (*string, bool) {
	if o == nil || o.PrerollAdAssetHostname == nil {
		return nil, false
	}
	return o.PrerollAdAssetHostname, true
}

// HasPrerollAdAssetHostname returns a boolean if a field has been set.
func (o *VideoView) HasPrerollAdAssetHostname() bool {
	if o != nil && o.PrerollAdAssetHostname != nil {
		return true
	}

	return false
}

// SetPrerollAdAssetHostname gets a reference to the given string and assigns it to the PrerollAdAssetHostname field.
func (o *VideoView) SetPrerollAdAssetHostname(v string) {
	o.PrerollAdAssetHostname = &v
}

// GetPlayerSourceDomain returns the PlayerSourceDomain field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceDomain() string {
	if o == nil || o.PlayerSourceDomain == nil {
		var ret string
		return ret
	}
	return *o.PlayerSourceDomain
}

// GetPlayerSourceDomainOk returns a tuple with the PlayerSourceDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceDomainOk() (*string, bool) {
	if o == nil || o.PlayerSourceDomain == nil {
		return nil, false
	}
	return o.PlayerSourceDomain, true
}

// HasPlayerSourceDomain returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceDomain() bool {
	if o != nil && o.PlayerSourceDomain != nil {
		return true
	}

	return false
}

// SetPlayerSourceDomain gets a reference to the given string and assigns it to the PlayerSourceDomain field.
func (o *VideoView) SetPlayerSourceDomain(v string) {
	o.PlayerSourceDomain = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *VideoView) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *VideoView) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *VideoView) SetRegion(v string) {
	o.Region = &v
}

// GetViewerUserAgent returns the ViewerUserAgent field value if set, zero value otherwise.
func (o *VideoView) GetViewerUserAgent() string {
	if o == nil || o.ViewerUserAgent == nil {
		var ret string
		return ret
	}
	return *o.ViewerUserAgent
}

// GetViewerUserAgentOk returns a tuple with the ViewerUserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerUserAgentOk() (*string, bool) {
	if o == nil || o.ViewerUserAgent == nil {
		return nil, false
	}
	return o.ViewerUserAgent, true
}

// HasViewerUserAgent returns a boolean if a field has been set.
func (o *VideoView) HasViewerUserAgent() bool {
	if o != nil && o.ViewerUserAgent != nil {
		return true
	}

	return false
}

// SetViewerUserAgent gets a reference to the given string and assigns it to the ViewerUserAgent field.
func (o *VideoView) SetViewerUserAgent(v string) {
	o.ViewerUserAgent = &v
}

// GetPrerollRequested returns the PrerollRequested field value if set, zero value otherwise.
func (o *VideoView) GetPrerollRequested() bool {
	if o == nil || o.PrerollRequested == nil {
		var ret bool
		return ret
	}
	return *o.PrerollRequested
}

// GetPrerollRequestedOk returns a tuple with the PrerollRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPrerollRequestedOk() (*bool, bool) {
	if o == nil || o.PrerollRequested == nil {
		return nil, false
	}
	return o.PrerollRequested, true
}

// HasPrerollRequested returns a boolean if a field has been set.
func (o *VideoView) HasPrerollRequested() bool {
	if o != nil && o.PrerollRequested != nil {
		return true
	}

	return false
}

// SetPrerollRequested gets a reference to the given bool and assigns it to the PrerollRequested field.
func (o *VideoView) SetPrerollRequested(v bool) {
	o.PrerollRequested = &v
}

// GetPageType returns the PageType field value if set, zero value otherwise.
func (o *VideoView) GetPageType() string {
	if o == nil || o.PageType == nil {
		var ret string
		return ret
	}
	return *o.PageType
}

// GetPageTypeOk returns a tuple with the PageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPageTypeOk() (*string, bool) {
	if o == nil || o.PageType == nil {
		return nil, false
	}
	return o.PageType, true
}

// HasPageType returns a boolean if a field has been set.
func (o *VideoView) HasPageType() bool {
	if o != nil && o.PageType != nil {
		return true
	}

	return false
}

// SetPageType gets a reference to the given string and assigns it to the PageType field.
func (o *VideoView) SetPageType(v string) {
	o.PageType = &v
}

// GetStartupScore returns the StartupScore field value if set, zero value otherwise.
func (o *VideoView) GetStartupScore() string {
	if o == nil || o.StartupScore == nil {
		var ret string
		return ret
	}
	return *o.StartupScore
}

// GetStartupScoreOk returns a tuple with the StartupScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetStartupScoreOk() (*string, bool) {
	if o == nil || o.StartupScore == nil {
		return nil, false
	}
	return o.StartupScore, true
}

// HasStartupScore returns a boolean if a field has been set.
func (o *VideoView) HasStartupScore() bool {
	if o != nil && o.StartupScore != nil {
		return true
	}

	return false
}

// SetStartupScore gets a reference to the given string and assigns it to the StartupScore field.
func (o *VideoView) SetStartupScore(v string) {
	o.StartupScore = &v
}

// GetViewSeekDuration returns the ViewSeekDuration field value if set, zero value otherwise.
func (o *VideoView) GetViewSeekDuration() int64 {
	if o == nil || o.ViewSeekDuration == nil {
		var ret int64
		return ret
	}
	return *o.ViewSeekDuration
}

// GetViewSeekDurationOk returns a tuple with the ViewSeekDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewSeekDurationOk() (*int64, bool) {
	if o == nil || o.ViewSeekDuration == nil {
		return nil, false
	}
	return o.ViewSeekDuration, true
}

// HasViewSeekDuration returns a boolean if a field has been set.
func (o *VideoView) HasViewSeekDuration() bool {
	if o != nil && o.ViewSeekDuration != nil {
		return true
	}

	return false
}

// SetViewSeekDuration gets a reference to the given int64 and assigns it to the ViewSeekDuration field.
func (o *VideoView) SetViewSeekDuration(v int64) {
	o.ViewSeekDuration = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *VideoView) GetCountryName() string {
	if o == nil || o.CountryName == nil {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetCountryNameOk() (*string, bool) {
	if o == nil || o.CountryName == nil {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *VideoView) HasCountryName() bool {
	if o != nil && o.CountryName != nil {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *VideoView) SetCountryName(v string) {
	o.CountryName = &v
}

// GetPlayerSourceHeight returns the PlayerSourceHeight field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceHeight() int32 {
	if o == nil || o.PlayerSourceHeight == nil {
		var ret int32
		return ret
	}
	return *o.PlayerSourceHeight
}

// GetPlayerSourceHeightOk returns a tuple with the PlayerSourceHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceHeightOk() (*int32, bool) {
	if o == nil || o.PlayerSourceHeight == nil {
		return nil, false
	}
	return o.PlayerSourceHeight, true
}

// HasPlayerSourceHeight returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceHeight() bool {
	if o != nil && o.PlayerSourceHeight != nil {
		return true
	}

	return false
}

// SetPlayerSourceHeight gets a reference to the given int32 and assigns it to the PlayerSourceHeight field.
func (o *VideoView) SetPlayerSourceHeight(v int32) {
	o.PlayerSourceHeight = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *VideoView) GetLongitude() string {
	if o == nil || o.Longitude == nil {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetLongitudeOk() (*string, bool) {
	if o == nil || o.Longitude == nil {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *VideoView) HasLongitude() bool {
	if o != nil && o.Longitude != nil {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *VideoView) SetLongitude(v string) {
	o.Longitude = &v
}

// GetBufferingCount returns the BufferingCount field value if set, zero value otherwise.
func (o *VideoView) GetBufferingCount() int64 {
	if o == nil || o.BufferingCount == nil {
		var ret int64
		return ret
	}
	return *o.BufferingCount
}

// GetBufferingCountOk returns a tuple with the BufferingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetBufferingCountOk() (*int64, bool) {
	if o == nil || o.BufferingCount == nil {
		return nil, false
	}
	return o.BufferingCount, true
}

// HasBufferingCount returns a boolean if a field has been set.
func (o *VideoView) HasBufferingCount() bool {
	if o != nil && o.BufferingCount != nil {
		return true
	}

	return false
}

// SetBufferingCount gets a reference to the given int64 and assigns it to the BufferingCount field.
func (o *VideoView) SetBufferingCount(v int64) {
	o.BufferingCount = &v
}

// GetVideoDuration returns the VideoDuration field value if set, zero value otherwise.
func (o *VideoView) GetVideoDuration() int64 {
	if o == nil || o.VideoDuration == nil {
		var ret int64
		return ret
	}
	return *o.VideoDuration
}

// GetVideoDurationOk returns a tuple with the VideoDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoDurationOk() (*int64, bool) {
	if o == nil || o.VideoDuration == nil {
		return nil, false
	}
	return o.VideoDuration, true
}

// HasVideoDuration returns a boolean if a field has been set.
func (o *VideoView) HasVideoDuration() bool {
	if o != nil && o.VideoDuration != nil {
		return true
	}

	return false
}

// SetVideoDuration gets a reference to the given int64 and assigns it to the VideoDuration field.
func (o *VideoView) SetVideoDuration(v int64) {
	o.VideoDuration = &v
}

// GetPlayerSourceType returns the PlayerSourceType field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceType() string {
	if o == nil || o.PlayerSourceType == nil {
		var ret string
		return ret
	}
	return *o.PlayerSourceType
}

// GetPlayerSourceTypeOk returns a tuple with the PlayerSourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceTypeOk() (*string, bool) {
	if o == nil || o.PlayerSourceType == nil {
		return nil, false
	}
	return o.PlayerSourceType, true
}

// HasPlayerSourceType returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceType() bool {
	if o != nil && o.PlayerSourceType != nil {
		return true
	}

	return false
}

// SetPlayerSourceType gets a reference to the given string and assigns it to the PlayerSourceType field.
func (o *VideoView) SetPlayerSourceType(v string) {
	o.PlayerSourceType = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *VideoView) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *VideoView) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *VideoView) SetCity(v string) {
	o.City = &v
}

// GetViewId returns the ViewId field value if set, zero value otherwise.
func (o *VideoView) GetViewId() string {
	if o == nil || o.ViewId == nil {
		var ret string
		return ret
	}
	return *o.ViewId
}

// GetViewIdOk returns a tuple with the ViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewIdOk() (*string, bool) {
	if o == nil || o.ViewId == nil {
		return nil, false
	}
	return o.ViewId, true
}

// HasViewId returns a boolean if a field has been set.
func (o *VideoView) HasViewId() bool {
	if o != nil && o.ViewId != nil {
		return true
	}

	return false
}

// SetViewId gets a reference to the given string and assigns it to the ViewId field.
func (o *VideoView) SetViewId(v string) {
	o.ViewId = &v
}

// GetPlatformDescription returns the PlatformDescription field value if set, zero value otherwise.
func (o *VideoView) GetPlatformDescription() string {
	if o == nil || o.PlatformDescription == nil {
		var ret string
		return ret
	}
	return *o.PlatformDescription
}

// GetPlatformDescriptionOk returns a tuple with the PlatformDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlatformDescriptionOk() (*string, bool) {
	if o == nil || o.PlatformDescription == nil {
		return nil, false
	}
	return o.PlatformDescription, true
}

// HasPlatformDescription returns a boolean if a field has been set.
func (o *VideoView) HasPlatformDescription() bool {
	if o != nil && o.PlatformDescription != nil {
		return true
	}

	return false
}

// SetPlatformDescription gets a reference to the given string and assigns it to the PlatformDescription field.
func (o *VideoView) SetPlatformDescription(v string) {
	o.PlatformDescription = &v
}

// GetVideoStartupPrerollRequestTime returns the VideoStartupPrerollRequestTime field value if set, zero value otherwise.
func (o *VideoView) GetVideoStartupPrerollRequestTime() int64 {
	if o == nil || o.VideoStartupPrerollRequestTime == nil {
		var ret int64
		return ret
	}
	return *o.VideoStartupPrerollRequestTime
}

// GetVideoStartupPrerollRequestTimeOk returns a tuple with the VideoStartupPrerollRequestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoStartupPrerollRequestTimeOk() (*int64, bool) {
	if o == nil || o.VideoStartupPrerollRequestTime == nil {
		return nil, false
	}
	return o.VideoStartupPrerollRequestTime, true
}

// HasVideoStartupPrerollRequestTime returns a boolean if a field has been set.
func (o *VideoView) HasVideoStartupPrerollRequestTime() bool {
	if o != nil && o.VideoStartupPrerollRequestTime != nil {
		return true
	}

	return false
}

// SetVideoStartupPrerollRequestTime gets a reference to the given int64 and assigns it to the VideoStartupPrerollRequestTime field.
func (o *VideoView) SetVideoStartupPrerollRequestTime(v int64) {
	o.VideoStartupPrerollRequestTime = &v
}

// GetViewerDeviceName returns the ViewerDeviceName field value if set, zero value otherwise.
func (o *VideoView) GetViewerDeviceName() string {
	if o == nil || o.ViewerDeviceName == nil {
		var ret string
		return ret
	}
	return *o.ViewerDeviceName
}

// GetViewerDeviceNameOk returns a tuple with the ViewerDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerDeviceNameOk() (*string, bool) {
	if o == nil || o.ViewerDeviceName == nil {
		return nil, false
	}
	return o.ViewerDeviceName, true
}

// HasViewerDeviceName returns a boolean if a field has been set.
func (o *VideoView) HasViewerDeviceName() bool {
	if o != nil && o.ViewerDeviceName != nil {
		return true
	}

	return false
}

// SetViewerDeviceName gets a reference to the given string and assigns it to the ViewerDeviceName field.
func (o *VideoView) SetViewerDeviceName(v string) {
	o.ViewerDeviceName = &v
}

// GetVideoSeries returns the VideoSeries field value if set, zero value otherwise.
func (o *VideoView) GetVideoSeries() string {
	if o == nil || o.VideoSeries == nil {
		var ret string
		return ret
	}
	return *o.VideoSeries
}

// GetVideoSeriesOk returns a tuple with the VideoSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoSeriesOk() (*string, bool) {
	if o == nil || o.VideoSeries == nil {
		return nil, false
	}
	return o.VideoSeries, true
}

// HasVideoSeries returns a boolean if a field has been set.
func (o *VideoView) HasVideoSeries() bool {
	if o != nil && o.VideoSeries != nil {
		return true
	}

	return false
}

// SetVideoSeries gets a reference to the given string and assigns it to the VideoSeries field.
func (o *VideoView) SetVideoSeries(v string) {
	o.VideoSeries = &v
}

// GetViewerApplicationName returns the ViewerApplicationName field value if set, zero value otherwise.
func (o *VideoView) GetViewerApplicationName() string {
	if o == nil || o.ViewerApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ViewerApplicationName
}

// GetViewerApplicationNameOk returns a tuple with the ViewerApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerApplicationNameOk() (*string, bool) {
	if o == nil || o.ViewerApplicationName == nil {
		return nil, false
	}
	return o.ViewerApplicationName, true
}

// HasViewerApplicationName returns a boolean if a field has been set.
func (o *VideoView) HasViewerApplicationName() bool {
	if o != nil && o.ViewerApplicationName != nil {
		return true
	}

	return false
}

// SetViewerApplicationName gets a reference to the given string and assigns it to the ViewerApplicationName field.
func (o *VideoView) SetViewerApplicationName(v string) {
	o.ViewerApplicationName = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VideoView) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VideoView) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *VideoView) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetViewTotalContentPlaybackTime returns the ViewTotalContentPlaybackTime field value if set, zero value otherwise.
func (o *VideoView) GetViewTotalContentPlaybackTime() int64 {
	if o == nil || o.ViewTotalContentPlaybackTime == nil {
		var ret int64
		return ret
	}
	return *o.ViewTotalContentPlaybackTime
}

// GetViewTotalContentPlaybackTimeOk returns a tuple with the ViewTotalContentPlaybackTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewTotalContentPlaybackTimeOk() (*int64, bool) {
	if o == nil || o.ViewTotalContentPlaybackTime == nil {
		return nil, false
	}
	return o.ViewTotalContentPlaybackTime, true
}

// HasViewTotalContentPlaybackTime returns a boolean if a field has been set.
func (o *VideoView) HasViewTotalContentPlaybackTime() bool {
	if o != nil && o.ViewTotalContentPlaybackTime != nil {
		return true
	}

	return false
}

// SetViewTotalContentPlaybackTime gets a reference to the given int64 and assigns it to the ViewTotalContentPlaybackTime field.
func (o *VideoView) SetViewTotalContentPlaybackTime(v int64) {
	o.ViewTotalContentPlaybackTime = &v
}

// GetCdn returns the Cdn field value if set, zero value otherwise.
func (o *VideoView) GetCdn() string {
	if o == nil || o.Cdn == nil {
		var ret string
		return ret
	}
	return *o.Cdn
}

// GetCdnOk returns a tuple with the Cdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetCdnOk() (*string, bool) {
	if o == nil || o.Cdn == nil {
		return nil, false
	}
	return o.Cdn, true
}

// HasCdn returns a boolean if a field has been set.
func (o *VideoView) HasCdn() bool {
	if o != nil && o.Cdn != nil {
		return true
	}

	return false
}

// SetCdn gets a reference to the given string and assigns it to the Cdn field.
func (o *VideoView) SetCdn(v string) {
	o.Cdn = &v
}

// GetPlayerInstanceId returns the PlayerInstanceId field value if set, zero value otherwise.
func (o *VideoView) GetPlayerInstanceId() string {
	if o == nil || o.PlayerInstanceId == nil {
		var ret string
		return ret
	}
	return *o.PlayerInstanceId
}

// GetPlayerInstanceIdOk returns a tuple with the PlayerInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerInstanceIdOk() (*string, bool) {
	if o == nil || o.PlayerInstanceId == nil {
		return nil, false
	}
	return o.PlayerInstanceId, true
}

// HasPlayerInstanceId returns a boolean if a field has been set.
func (o *VideoView) HasPlayerInstanceId() bool {
	if o != nil && o.PlayerInstanceId != nil {
		return true
	}

	return false
}

// SetPlayerInstanceId gets a reference to the given string and assigns it to the PlayerInstanceId field.
func (o *VideoView) SetPlayerInstanceId(v string) {
	o.PlayerInstanceId = &v
}

// GetVideoLanguage returns the VideoLanguage field value if set, zero value otherwise.
func (o *VideoView) GetVideoLanguage() string {
	if o == nil || o.VideoLanguage == nil {
		var ret string
		return ret
	}
	return *o.VideoLanguage
}

// GetVideoLanguageOk returns a tuple with the VideoLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoLanguageOk() (*string, bool) {
	if o == nil || o.VideoLanguage == nil {
		return nil, false
	}
	return o.VideoLanguage, true
}

// HasVideoLanguage returns a boolean if a field has been set.
func (o *VideoView) HasVideoLanguage() bool {
	if o != nil && o.VideoLanguage != nil {
		return true
	}

	return false
}

// SetVideoLanguage gets a reference to the given string and assigns it to the VideoLanguage field.
func (o *VideoView) SetVideoLanguage(v string) {
	o.VideoLanguage = &v
}

// GetPlayerSourceWidth returns the PlayerSourceWidth field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceWidth() int32 {
	if o == nil || o.PlayerSourceWidth == nil {
		var ret int32
		return ret
	}
	return *o.PlayerSourceWidth
}

// GetPlayerSourceWidthOk returns a tuple with the PlayerSourceWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceWidthOk() (*int32, bool) {
	if o == nil || o.PlayerSourceWidth == nil {
		return nil, false
	}
	return o.PlayerSourceWidth, true
}

// HasPlayerSourceWidth returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceWidth() bool {
	if o != nil && o.PlayerSourceWidth != nil {
		return true
	}

	return false
}

// SetPlayerSourceWidth gets a reference to the given int32 and assigns it to the PlayerSourceWidth field.
func (o *VideoView) SetPlayerSourceWidth(v int32) {
	o.PlayerSourceWidth = &v
}

// GetPlayerErrorMessage returns the PlayerErrorMessage field value if set, zero value otherwise.
func (o *VideoView) GetPlayerErrorMessage() string {
	if o == nil || o.PlayerErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.PlayerErrorMessage
}

// GetPlayerErrorMessageOk returns a tuple with the PlayerErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerErrorMessageOk() (*string, bool) {
	if o == nil || o.PlayerErrorMessage == nil {
		return nil, false
	}
	return o.PlayerErrorMessage, true
}

// HasPlayerErrorMessage returns a boolean if a field has been set.
func (o *VideoView) HasPlayerErrorMessage() bool {
	if o != nil && o.PlayerErrorMessage != nil {
		return true
	}

	return false
}

// SetPlayerErrorMessage gets a reference to the given string and assigns it to the PlayerErrorMessage field.
func (o *VideoView) SetPlayerErrorMessage(v string) {
	o.PlayerErrorMessage = &v
}

// GetPlayerMuxPluginVersion returns the PlayerMuxPluginVersion field value if set, zero value otherwise.
func (o *VideoView) GetPlayerMuxPluginVersion() string {
	if o == nil || o.PlayerMuxPluginVersion == nil {
		var ret string
		return ret
	}
	return *o.PlayerMuxPluginVersion
}

// GetPlayerMuxPluginVersionOk returns a tuple with the PlayerMuxPluginVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerMuxPluginVersionOk() (*string, bool) {
	if o == nil || o.PlayerMuxPluginVersion == nil {
		return nil, false
	}
	return o.PlayerMuxPluginVersion, true
}

// HasPlayerMuxPluginVersion returns a boolean if a field has been set.
func (o *VideoView) HasPlayerMuxPluginVersion() bool {
	if o != nil && o.PlayerMuxPluginVersion != nil {
		return true
	}

	return false
}

// SetPlayerMuxPluginVersion gets a reference to the given string and assigns it to the PlayerMuxPluginVersion field.
func (o *VideoView) SetPlayerMuxPluginVersion(v string) {
	o.PlayerMuxPluginVersion = &v
}

// GetWatched returns the Watched field value if set, zero value otherwise.
func (o *VideoView) GetWatched() bool {
	if o == nil || o.Watched == nil {
		var ret bool
		return ret
	}
	return *o.Watched
}

// GetWatchedOk returns a tuple with the Watched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetWatchedOk() (*bool, bool) {
	if o == nil || o.Watched == nil {
		return nil, false
	}
	return o.Watched, true
}

// HasWatched returns a boolean if a field has been set.
func (o *VideoView) HasWatched() bool {
	if o != nil && o.Watched != nil {
		return true
	}

	return false
}

// SetWatched gets a reference to the given bool and assigns it to the Watched field.
func (o *VideoView) SetWatched(v bool) {
	o.Watched = &v
}

// GetPlaybackScore returns the PlaybackScore field value if set, zero value otherwise.
func (o *VideoView) GetPlaybackScore() string {
	if o == nil || o.PlaybackScore == nil {
		var ret string
		return ret
	}
	return *o.PlaybackScore
}

// GetPlaybackScoreOk returns a tuple with the PlaybackScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlaybackScoreOk() (*string, bool) {
	if o == nil || o.PlaybackScore == nil {
		return nil, false
	}
	return o.PlaybackScore, true
}

// HasPlaybackScore returns a boolean if a field has been set.
func (o *VideoView) HasPlaybackScore() bool {
	if o != nil && o.PlaybackScore != nil {
		return true
	}

	return false
}

// SetPlaybackScore gets a reference to the given string and assigns it to the PlaybackScore field.
func (o *VideoView) SetPlaybackScore(v string) {
	o.PlaybackScore = &v
}

// GetPageUrl returns the PageUrl field value if set, zero value otherwise.
func (o *VideoView) GetPageUrl() string {
	if o == nil || o.PageUrl == nil {
		var ret string
		return ret
	}
	return *o.PageUrl
}

// GetPageUrlOk returns a tuple with the PageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPageUrlOk() (*string, bool) {
	if o == nil || o.PageUrl == nil {
		return nil, false
	}
	return o.PageUrl, true
}

// HasPageUrl returns a boolean if a field has been set.
func (o *VideoView) HasPageUrl() bool {
	if o != nil && o.PageUrl != nil {
		return true
	}

	return false
}

// SetPageUrl gets a reference to the given string and assigns it to the PageUrl field.
func (o *VideoView) SetPageUrl(v string) {
	o.PageUrl = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *VideoView) GetMetro() string {
	if o == nil || o.Metro == nil {
		var ret string
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetMetroOk() (*string, bool) {
	if o == nil || o.Metro == nil {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *VideoView) HasMetro() bool {
	if o != nil && o.Metro != nil {
		return true
	}

	return false
}

// SetMetro gets a reference to the given string and assigns it to the Metro field.
func (o *VideoView) SetMetro(v string) {
	o.Metro = &v
}

// GetViewMaxRequestLatency returns the ViewMaxRequestLatency field value if set, zero value otherwise.
func (o *VideoView) GetViewMaxRequestLatency() int64 {
	if o == nil || o.ViewMaxRequestLatency == nil {
		var ret int64
		return ret
	}
	return *o.ViewMaxRequestLatency
}

// GetViewMaxRequestLatencyOk returns a tuple with the ViewMaxRequestLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewMaxRequestLatencyOk() (*int64, bool) {
	if o == nil || o.ViewMaxRequestLatency == nil {
		return nil, false
	}
	return o.ViewMaxRequestLatency, true
}

// HasViewMaxRequestLatency returns a boolean if a field has been set.
func (o *VideoView) HasViewMaxRequestLatency() bool {
	if o != nil && o.ViewMaxRequestLatency != nil {
		return true
	}

	return false
}

// SetViewMaxRequestLatency gets a reference to the given int64 and assigns it to the ViewMaxRequestLatency field.
func (o *VideoView) SetViewMaxRequestLatency(v int64) {
	o.ViewMaxRequestLatency = &v
}

// GetRequestsForFirstPreroll returns the RequestsForFirstPreroll field value if set, zero value otherwise.
func (o *VideoView) GetRequestsForFirstPreroll() int64 {
	if o == nil || o.RequestsForFirstPreroll == nil {
		var ret int64
		return ret
	}
	return *o.RequestsForFirstPreroll
}

// GetRequestsForFirstPrerollOk returns a tuple with the RequestsForFirstPreroll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetRequestsForFirstPrerollOk() (*int64, bool) {
	if o == nil || o.RequestsForFirstPreroll == nil {
		return nil, false
	}
	return o.RequestsForFirstPreroll, true
}

// HasRequestsForFirstPreroll returns a boolean if a field has been set.
func (o *VideoView) HasRequestsForFirstPreroll() bool {
	if o != nil && o.RequestsForFirstPreroll != nil {
		return true
	}

	return false
}

// SetRequestsForFirstPreroll gets a reference to the given int64 and assigns it to the RequestsForFirstPreroll field.
func (o *VideoView) SetRequestsForFirstPreroll(v int64) {
	o.RequestsForFirstPreroll = &v
}

// GetViewTotalDownscaling returns the ViewTotalDownscaling field value if set, zero value otherwise.
func (o *VideoView) GetViewTotalDownscaling() string {
	if o == nil || o.ViewTotalDownscaling == nil {
		var ret string
		return ret
	}
	return *o.ViewTotalDownscaling
}

// GetViewTotalDownscalingOk returns a tuple with the ViewTotalDownscaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewTotalDownscalingOk() (*string, bool) {
	if o == nil || o.ViewTotalDownscaling == nil {
		return nil, false
	}
	return o.ViewTotalDownscaling, true
}

// HasViewTotalDownscaling returns a boolean if a field has been set.
func (o *VideoView) HasViewTotalDownscaling() bool {
	if o != nil && o.ViewTotalDownscaling != nil {
		return true
	}

	return false
}

// SetViewTotalDownscaling gets a reference to the given string and assigns it to the ViewTotalDownscaling field.
func (o *VideoView) SetViewTotalDownscaling(v string) {
	o.ViewTotalDownscaling = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *VideoView) GetLatitude() string {
	if o == nil || o.Latitude == nil {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetLatitudeOk() (*string, bool) {
	if o == nil || o.Latitude == nil {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *VideoView) HasLatitude() bool {
	if o != nil && o.Latitude != nil {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *VideoView) SetLatitude(v string) {
	o.Latitude = &v
}

// GetPlayerSourceHostName returns the PlayerSourceHostName field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceHostName() string {
	if o == nil || o.PlayerSourceHostName == nil {
		var ret string
		return ret
	}
	return *o.PlayerSourceHostName
}

// GetPlayerSourceHostNameOk returns a tuple with the PlayerSourceHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceHostNameOk() (*string, bool) {
	if o == nil || o.PlayerSourceHostName == nil {
		return nil, false
	}
	return o.PlayerSourceHostName, true
}

// HasPlayerSourceHostName returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceHostName() bool {
	if o != nil && o.PlayerSourceHostName != nil {
		return true
	}

	return false
}

// SetPlayerSourceHostName gets a reference to the given string and assigns it to the PlayerSourceHostName field.
func (o *VideoView) SetPlayerSourceHostName(v string) {
	o.PlayerSourceHostName = &v
}

// GetInsertedAt returns the InsertedAt field value if set, zero value otherwise.
func (o *VideoView) GetInsertedAt() string {
	if o == nil || o.InsertedAt == nil {
		var ret string
		return ret
	}
	return *o.InsertedAt
}

// GetInsertedAtOk returns a tuple with the InsertedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetInsertedAtOk() (*string, bool) {
	if o == nil || o.InsertedAt == nil {
		return nil, false
	}
	return o.InsertedAt, true
}

// HasInsertedAt returns a boolean if a field has been set.
func (o *VideoView) HasInsertedAt() bool {
	if o != nil && o.InsertedAt != nil {
		return true
	}

	return false
}

// SetInsertedAt gets a reference to the given string and assigns it to the InsertedAt field.
func (o *VideoView) SetInsertedAt(v string) {
	o.InsertedAt = &v
}

// GetViewEnd returns the ViewEnd field value if set, zero value otherwise.
func (o *VideoView) GetViewEnd() string {
	if o == nil || o.ViewEnd == nil {
		var ret string
		return ret
	}
	return *o.ViewEnd
}

// GetViewEndOk returns a tuple with the ViewEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewEndOk() (*string, bool) {
	if o == nil || o.ViewEnd == nil {
		return nil, false
	}
	return o.ViewEnd, true
}

// HasViewEnd returns a boolean if a field has been set.
func (o *VideoView) HasViewEnd() bool {
	if o != nil && o.ViewEnd != nil {
		return true
	}

	return false
}

// SetViewEnd gets a reference to the given string and assigns it to the ViewEnd field.
func (o *VideoView) SetViewEnd(v string) {
	o.ViewEnd = &v
}

// GetMuxEmbedVersion returns the MuxEmbedVersion field value if set, zero value otherwise.
func (o *VideoView) GetMuxEmbedVersion() string {
	if o == nil || o.MuxEmbedVersion == nil {
		var ret string
		return ret
	}
	return *o.MuxEmbedVersion
}

// GetMuxEmbedVersionOk returns a tuple with the MuxEmbedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetMuxEmbedVersionOk() (*string, bool) {
	if o == nil || o.MuxEmbedVersion == nil {
		return nil, false
	}
	return o.MuxEmbedVersion, true
}

// HasMuxEmbedVersion returns a boolean if a field has been set.
func (o *VideoView) HasMuxEmbedVersion() bool {
	if o != nil && o.MuxEmbedVersion != nil {
		return true
	}

	return false
}

// SetMuxEmbedVersion gets a reference to the given string and assigns it to the MuxEmbedVersion field.
func (o *VideoView) SetMuxEmbedVersion(v string) {
	o.MuxEmbedVersion = &v
}

// GetPlayerLanguage returns the PlayerLanguage field value if set, zero value otherwise.
func (o *VideoView) GetPlayerLanguage() string {
	if o == nil || o.PlayerLanguage == nil {
		var ret string
		return ret
	}
	return *o.PlayerLanguage
}

// GetPlayerLanguageOk returns a tuple with the PlayerLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerLanguageOk() (*string, bool) {
	if o == nil || o.PlayerLanguage == nil {
		return nil, false
	}
	return o.PlayerLanguage, true
}

// HasPlayerLanguage returns a boolean if a field has been set.
func (o *VideoView) HasPlayerLanguage() bool {
	if o != nil && o.PlayerLanguage != nil {
		return true
	}

	return false
}

// SetPlayerLanguage gets a reference to the given string and assigns it to the PlayerLanguage field.
func (o *VideoView) SetPlayerLanguage(v string) {
	o.PlayerLanguage = &v
}

// GetPageLoadTime returns the PageLoadTime field value if set, zero value otherwise.
func (o *VideoView) GetPageLoadTime() int64 {
	if o == nil || o.PageLoadTime == nil {
		var ret int64
		return ret
	}
	return *o.PageLoadTime
}

// GetPageLoadTimeOk returns a tuple with the PageLoadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPageLoadTimeOk() (*int64, bool) {
	if o == nil || o.PageLoadTime == nil {
		return nil, false
	}
	return o.PageLoadTime, true
}

// HasPageLoadTime returns a boolean if a field has been set.
func (o *VideoView) HasPageLoadTime() bool {
	if o != nil && o.PageLoadTime != nil {
		return true
	}

	return false
}

// SetPageLoadTime gets a reference to the given int64 and assigns it to the PageLoadTime field.
func (o *VideoView) SetPageLoadTime(v int64) {
	o.PageLoadTime = &v
}

// GetViewerDeviceCategory returns the ViewerDeviceCategory field value if set, zero value otherwise.
func (o *VideoView) GetViewerDeviceCategory() string {
	if o == nil || o.ViewerDeviceCategory == nil {
		var ret string
		return ret
	}
	return *o.ViewerDeviceCategory
}

// GetViewerDeviceCategoryOk returns a tuple with the ViewerDeviceCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerDeviceCategoryOk() (*string, bool) {
	if o == nil || o.ViewerDeviceCategory == nil {
		return nil, false
	}
	return o.ViewerDeviceCategory, true
}

// HasViewerDeviceCategory returns a boolean if a field has been set.
func (o *VideoView) HasViewerDeviceCategory() bool {
	if o != nil && o.ViewerDeviceCategory != nil {
		return true
	}

	return false
}

// SetViewerDeviceCategory gets a reference to the given string and assigns it to the ViewerDeviceCategory field.
func (o *VideoView) SetViewerDeviceCategory(v string) {
	o.ViewerDeviceCategory = &v
}

// GetVideoStartupPrerollLoadTime returns the VideoStartupPrerollLoadTime field value if set, zero value otherwise.
func (o *VideoView) GetVideoStartupPrerollLoadTime() int64 {
	if o == nil || o.VideoStartupPrerollLoadTime == nil {
		var ret int64
		return ret
	}
	return *o.VideoStartupPrerollLoadTime
}

// GetVideoStartupPrerollLoadTimeOk returns a tuple with the VideoStartupPrerollLoadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoStartupPrerollLoadTimeOk() (*int64, bool) {
	if o == nil || o.VideoStartupPrerollLoadTime == nil {
		return nil, false
	}
	return o.VideoStartupPrerollLoadTime, true
}

// HasVideoStartupPrerollLoadTime returns a boolean if a field has been set.
func (o *VideoView) HasVideoStartupPrerollLoadTime() bool {
	if o != nil && o.VideoStartupPrerollLoadTime != nil {
		return true
	}

	return false
}

// SetVideoStartupPrerollLoadTime gets a reference to the given int64 and assigns it to the VideoStartupPrerollLoadTime field.
func (o *VideoView) SetVideoStartupPrerollLoadTime(v int64) {
	o.VideoStartupPrerollLoadTime = &v
}

// GetPlayerVersion returns the PlayerVersion field value if set, zero value otherwise.
func (o *VideoView) GetPlayerVersion() string {
	if o == nil || o.PlayerVersion == nil {
		var ret string
		return ret
	}
	return *o.PlayerVersion
}

// GetPlayerVersionOk returns a tuple with the PlayerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerVersionOk() (*string, bool) {
	if o == nil || o.PlayerVersion == nil {
		return nil, false
	}
	return o.PlayerVersion, true
}

// HasPlayerVersion returns a boolean if a field has been set.
func (o *VideoView) HasPlayerVersion() bool {
	if o != nil && o.PlayerVersion != nil {
		return true
	}

	return false
}

// SetPlayerVersion gets a reference to the given string and assigns it to the PlayerVersion field.
func (o *VideoView) SetPlayerVersion(v string) {
	o.PlayerVersion = &v
}

// GetWatchTime returns the WatchTime field value if set, zero value otherwise.
func (o *VideoView) GetWatchTime() int64 {
	if o == nil || o.WatchTime == nil {
		var ret int64
		return ret
	}
	return *o.WatchTime
}

// GetWatchTimeOk returns a tuple with the WatchTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetWatchTimeOk() (*int64, bool) {
	if o == nil || o.WatchTime == nil {
		return nil, false
	}
	return o.WatchTime, true
}

// HasWatchTime returns a boolean if a field has been set.
func (o *VideoView) HasWatchTime() bool {
	if o != nil && o.WatchTime != nil {
		return true
	}

	return false
}

// SetWatchTime gets a reference to the given int64 and assigns it to the WatchTime field.
func (o *VideoView) SetWatchTime(v int64) {
	o.WatchTime = &v
}

// GetPlayerSourceStreamType returns the PlayerSourceStreamType field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceStreamType() string {
	if o == nil || o.PlayerSourceStreamType == nil {
		var ret string
		return ret
	}
	return *o.PlayerSourceStreamType
}

// GetPlayerSourceStreamTypeOk returns a tuple with the PlayerSourceStreamType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceStreamTypeOk() (*string, bool) {
	if o == nil || o.PlayerSourceStreamType == nil {
		return nil, false
	}
	return o.PlayerSourceStreamType, true
}

// HasPlayerSourceStreamType returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceStreamType() bool {
	if o != nil && o.PlayerSourceStreamType != nil {
		return true
	}

	return false
}

// SetPlayerSourceStreamType gets a reference to the given string and assigns it to the PlayerSourceStreamType field.
func (o *VideoView) SetPlayerSourceStreamType(v string) {
	o.PlayerSourceStreamType = &v
}

// GetPrerollAdTagHostname returns the PrerollAdTagHostname field value if set, zero value otherwise.
func (o *VideoView) GetPrerollAdTagHostname() string {
	if o == nil || o.PrerollAdTagHostname == nil {
		var ret string
		return ret
	}
	return *o.PrerollAdTagHostname
}

// GetPrerollAdTagHostnameOk returns a tuple with the PrerollAdTagHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPrerollAdTagHostnameOk() (*string, bool) {
	if o == nil || o.PrerollAdTagHostname == nil {
		return nil, false
	}
	return o.PrerollAdTagHostname, true
}

// HasPrerollAdTagHostname returns a boolean if a field has been set.
func (o *VideoView) HasPrerollAdTagHostname() bool {
	if o != nil && o.PrerollAdTagHostname != nil {
		return true
	}

	return false
}

// SetPrerollAdTagHostname gets a reference to the given string and assigns it to the PrerollAdTagHostname field.
func (o *VideoView) SetPrerollAdTagHostname(v string) {
	o.PrerollAdTagHostname = &v
}

// GetViewerDeviceManufacturer returns the ViewerDeviceManufacturer field value if set, zero value otherwise.
func (o *VideoView) GetViewerDeviceManufacturer() string {
	if o == nil || o.ViewerDeviceManufacturer == nil {
		var ret string
		return ret
	}
	return *o.ViewerDeviceManufacturer
}

// GetViewerDeviceManufacturerOk returns a tuple with the ViewerDeviceManufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerDeviceManufacturerOk() (*string, bool) {
	if o == nil || o.ViewerDeviceManufacturer == nil {
		return nil, false
	}
	return o.ViewerDeviceManufacturer, true
}

// HasViewerDeviceManufacturer returns a boolean if a field has been set.
func (o *VideoView) HasViewerDeviceManufacturer() bool {
	if o != nil && o.ViewerDeviceManufacturer != nil {
		return true
	}

	return false
}

// SetViewerDeviceManufacturer gets a reference to the given string and assigns it to the ViewerDeviceManufacturer field.
func (o *VideoView) SetViewerDeviceManufacturer(v string) {
	o.ViewerDeviceManufacturer = &v
}

// GetRebufferingScore returns the RebufferingScore field value if set, zero value otherwise.
func (o *VideoView) GetRebufferingScore() string {
	if o == nil || o.RebufferingScore == nil {
		var ret string
		return ret
	}
	return *o.RebufferingScore
}

// GetRebufferingScoreOk returns a tuple with the RebufferingScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetRebufferingScoreOk() (*string, bool) {
	if o == nil || o.RebufferingScore == nil {
		return nil, false
	}
	return o.RebufferingScore, true
}

// HasRebufferingScore returns a boolean if a field has been set.
func (o *VideoView) HasRebufferingScore() bool {
	if o != nil && o.RebufferingScore != nil {
		return true
	}

	return false
}

// SetRebufferingScore gets a reference to the given string and assigns it to the RebufferingScore field.
func (o *VideoView) SetRebufferingScore(v string) {
	o.RebufferingScore = &v
}

// GetExperimentName returns the ExperimentName field value if set, zero value otherwise.
func (o *VideoView) GetExperimentName() string {
	if o == nil || o.ExperimentName == nil {
		var ret string
		return ret
	}
	return *o.ExperimentName
}

// GetExperimentNameOk returns a tuple with the ExperimentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetExperimentNameOk() (*string, bool) {
	if o == nil || o.ExperimentName == nil {
		return nil, false
	}
	return o.ExperimentName, true
}

// HasExperimentName returns a boolean if a field has been set.
func (o *VideoView) HasExperimentName() bool {
	if o != nil && o.ExperimentName != nil {
		return true
	}

	return false
}

// SetExperimentName gets a reference to the given string and assigns it to the ExperimentName field.
func (o *VideoView) SetExperimentName(v string) {
	o.ExperimentName = &v
}

// GetViewerOsVersion returns the ViewerOsVersion field value if set, zero value otherwise.
func (o *VideoView) GetViewerOsVersion() string {
	if o == nil || o.ViewerOsVersion == nil {
		var ret string
		return ret
	}
	return *o.ViewerOsVersion
}

// GetViewerOsVersionOk returns a tuple with the ViewerOsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerOsVersionOk() (*string, bool) {
	if o == nil || o.ViewerOsVersion == nil {
		return nil, false
	}
	return o.ViewerOsVersion, true
}

// HasViewerOsVersion returns a boolean if a field has been set.
func (o *VideoView) HasViewerOsVersion() bool {
	if o != nil && o.ViewerOsVersion != nil {
		return true
	}

	return false
}

// SetViewerOsVersion gets a reference to the given string and assigns it to the ViewerOsVersion field.
func (o *VideoView) SetViewerOsVersion(v string) {
	o.ViewerOsVersion = &v
}

// GetPlayerPreload returns the PlayerPreload field value if set, zero value otherwise.
func (o *VideoView) GetPlayerPreload() bool {
	if o == nil || o.PlayerPreload == nil {
		var ret bool
		return ret
	}
	return *o.PlayerPreload
}

// GetPlayerPreloadOk returns a tuple with the PlayerPreload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerPreloadOk() (*bool, bool) {
	if o == nil || o.PlayerPreload == nil {
		return nil, false
	}
	return o.PlayerPreload, true
}

// HasPlayerPreload returns a boolean if a field has been set.
func (o *VideoView) HasPlayerPreload() bool {
	if o != nil && o.PlayerPreload != nil {
		return true
	}

	return false
}

// SetPlayerPreload gets a reference to the given bool and assigns it to the PlayerPreload field.
func (o *VideoView) SetPlayerPreload(v bool) {
	o.PlayerPreload = &v
}

// GetBufferingDuration returns the BufferingDuration field value if set, zero value otherwise.
func (o *VideoView) GetBufferingDuration() int64 {
	if o == nil || o.BufferingDuration == nil {
		var ret int64
		return ret
	}
	return *o.BufferingDuration
}

// GetBufferingDurationOk returns a tuple with the BufferingDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetBufferingDurationOk() (*int64, bool) {
	if o == nil || o.BufferingDuration == nil {
		return nil, false
	}
	return o.BufferingDuration, true
}

// HasBufferingDuration returns a boolean if a field has been set.
func (o *VideoView) HasBufferingDuration() bool {
	if o != nil && o.BufferingDuration != nil {
		return true
	}

	return false
}

// SetBufferingDuration gets a reference to the given int64 and assigns it to the BufferingDuration field.
func (o *VideoView) SetBufferingDuration(v int64) {
	o.BufferingDuration = &v
}

// GetPlayerViewCount returns the PlayerViewCount field value if set, zero value otherwise.
func (o *VideoView) GetPlayerViewCount() int64 {
	if o == nil || o.PlayerViewCount == nil {
		var ret int64
		return ret
	}
	return *o.PlayerViewCount
}

// GetPlayerViewCountOk returns a tuple with the PlayerViewCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerViewCountOk() (*int64, bool) {
	if o == nil || o.PlayerViewCount == nil {
		return nil, false
	}
	return o.PlayerViewCount, true
}

// HasPlayerViewCount returns a boolean if a field has been set.
func (o *VideoView) HasPlayerViewCount() bool {
	if o != nil && o.PlayerViewCount != nil {
		return true
	}

	return false
}

// SetPlayerViewCount gets a reference to the given int64 and assigns it to the PlayerViewCount field.
func (o *VideoView) SetPlayerViewCount(v int64) {
	o.PlayerViewCount = &v
}

// GetPlayerSoftware returns the PlayerSoftware field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSoftware() string {
	if o == nil || o.PlayerSoftware == nil {
		var ret string
		return ret
	}
	return *o.PlayerSoftware
}

// GetPlayerSoftwareOk returns a tuple with the PlayerSoftware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSoftwareOk() (*string, bool) {
	if o == nil || o.PlayerSoftware == nil {
		return nil, false
	}
	return o.PlayerSoftware, true
}

// HasPlayerSoftware returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSoftware() bool {
	if o != nil && o.PlayerSoftware != nil {
		return true
	}

	return false
}

// SetPlayerSoftware gets a reference to the given string and assigns it to the PlayerSoftware field.
func (o *VideoView) SetPlayerSoftware(v string) {
	o.PlayerSoftware = &v
}

// GetPlayerLoadTime returns the PlayerLoadTime field value if set, zero value otherwise.
func (o *VideoView) GetPlayerLoadTime() int64 {
	if o == nil || o.PlayerLoadTime == nil {
		var ret int64
		return ret
	}
	return *o.PlayerLoadTime
}

// GetPlayerLoadTimeOk returns a tuple with the PlayerLoadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerLoadTimeOk() (*int64, bool) {
	if o == nil || o.PlayerLoadTime == nil {
		return nil, false
	}
	return o.PlayerLoadTime, true
}

// HasPlayerLoadTime returns a boolean if a field has been set.
func (o *VideoView) HasPlayerLoadTime() bool {
	if o != nil && o.PlayerLoadTime != nil {
		return true
	}

	return false
}

// SetPlayerLoadTime gets a reference to the given int64 and assigns it to the PlayerLoadTime field.
func (o *VideoView) SetPlayerLoadTime(v int64) {
	o.PlayerLoadTime = &v
}

// GetPlatformSummary returns the PlatformSummary field value if set, zero value otherwise.
func (o *VideoView) GetPlatformSummary() string {
	if o == nil || o.PlatformSummary == nil {
		var ret string
		return ret
	}
	return *o.PlatformSummary
}

// GetPlatformSummaryOk returns a tuple with the PlatformSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlatformSummaryOk() (*string, bool) {
	if o == nil || o.PlatformSummary == nil {
		return nil, false
	}
	return o.PlatformSummary, true
}

// HasPlatformSummary returns a boolean if a field has been set.
func (o *VideoView) HasPlatformSummary() bool {
	if o != nil && o.PlatformSummary != nil {
		return true
	}

	return false
}

// SetPlatformSummary gets a reference to the given string and assigns it to the PlatformSummary field.
func (o *VideoView) SetPlatformSummary(v string) {
	o.PlatformSummary = &v
}

// GetVideoEncodingVariant returns the VideoEncodingVariant field value if set, zero value otherwise.
func (o *VideoView) GetVideoEncodingVariant() string {
	if o == nil || o.VideoEncodingVariant == nil {
		var ret string
		return ret
	}
	return *o.VideoEncodingVariant
}

// GetVideoEncodingVariantOk returns a tuple with the VideoEncodingVariant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoEncodingVariantOk() (*string, bool) {
	if o == nil || o.VideoEncodingVariant == nil {
		return nil, false
	}
	return o.VideoEncodingVariant, true
}

// HasVideoEncodingVariant returns a boolean if a field has been set.
func (o *VideoView) HasVideoEncodingVariant() bool {
	if o != nil && o.VideoEncodingVariant != nil {
		return true
	}

	return false
}

// SetVideoEncodingVariant gets a reference to the given string and assigns it to the VideoEncodingVariant field.
func (o *VideoView) SetVideoEncodingVariant(v string) {
	o.VideoEncodingVariant = &v
}

// GetPlayerWidth returns the PlayerWidth field value if set, zero value otherwise.
func (o *VideoView) GetPlayerWidth() int32 {
	if o == nil || o.PlayerWidth == nil {
		var ret int32
		return ret
	}
	return *o.PlayerWidth
}

// GetPlayerWidthOk returns a tuple with the PlayerWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerWidthOk() (*int32, bool) {
	if o == nil || o.PlayerWidth == nil {
		return nil, false
	}
	return o.PlayerWidth, true
}

// HasPlayerWidth returns a boolean if a field has been set.
func (o *VideoView) HasPlayerWidth() bool {
	if o != nil && o.PlayerWidth != nil {
		return true
	}

	return false
}

// SetPlayerWidth gets a reference to the given int32 and assigns it to the PlayerWidth field.
func (o *VideoView) SetPlayerWidth(v int32) {
	o.PlayerWidth = &v
}

// GetViewSeekCount returns the ViewSeekCount field value if set, zero value otherwise.
func (o *VideoView) GetViewSeekCount() int64 {
	if o == nil || o.ViewSeekCount == nil {
		var ret int64
		return ret
	}
	return *o.ViewSeekCount
}

// GetViewSeekCountOk returns a tuple with the ViewSeekCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewSeekCountOk() (*int64, bool) {
	if o == nil || o.ViewSeekCount == nil {
		return nil, false
	}
	return o.ViewSeekCount, true
}

// HasViewSeekCount returns a boolean if a field has been set.
func (o *VideoView) HasViewSeekCount() bool {
	if o != nil && o.ViewSeekCount != nil {
		return true
	}

	return false
}

// SetViewSeekCount gets a reference to the given int64 and assigns it to the ViewSeekCount field.
func (o *VideoView) SetViewSeekCount(v int64) {
	o.ViewSeekCount = &v
}

// GetViewerExperienceScore returns the ViewerExperienceScore field value if set, zero value otherwise.
func (o *VideoView) GetViewerExperienceScore() string {
	if o == nil || o.ViewerExperienceScore == nil {
		var ret string
		return ret
	}
	return *o.ViewerExperienceScore
}

// GetViewerExperienceScoreOk returns a tuple with the ViewerExperienceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerExperienceScoreOk() (*string, bool) {
	if o == nil || o.ViewerExperienceScore == nil {
		return nil, false
	}
	return o.ViewerExperienceScore, true
}

// HasViewerExperienceScore returns a boolean if a field has been set.
func (o *VideoView) HasViewerExperienceScore() bool {
	if o != nil && o.ViewerExperienceScore != nil {
		return true
	}

	return false
}

// SetViewerExperienceScore gets a reference to the given string and assigns it to the ViewerExperienceScore field.
func (o *VideoView) SetViewerExperienceScore(v string) {
	o.ViewerExperienceScore = &v
}

// GetViewErrorId returns the ViewErrorId field value if set, zero value otherwise.
func (o *VideoView) GetViewErrorId() int32 {
	if o == nil || o.ViewErrorId == nil {
		var ret int32
		return ret
	}
	return *o.ViewErrorId
}

// GetViewErrorIdOk returns a tuple with the ViewErrorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewErrorIdOk() (*int32, bool) {
	if o == nil || o.ViewErrorId == nil {
		return nil, false
	}
	return o.ViewErrorId, true
}

// HasViewErrorId returns a boolean if a field has been set.
func (o *VideoView) HasViewErrorId() bool {
	if o != nil && o.ViewErrorId != nil {
		return true
	}

	return false
}

// SetViewErrorId gets a reference to the given int32 and assigns it to the ViewErrorId field.
func (o *VideoView) SetViewErrorId(v int32) {
	o.ViewErrorId = &v
}

// GetVideoVariantName returns the VideoVariantName field value if set, zero value otherwise.
func (o *VideoView) GetVideoVariantName() string {
	if o == nil || o.VideoVariantName == nil {
		var ret string
		return ret
	}
	return *o.VideoVariantName
}

// GetVideoVariantNameOk returns a tuple with the VideoVariantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoVariantNameOk() (*string, bool) {
	if o == nil || o.VideoVariantName == nil {
		return nil, false
	}
	return o.VideoVariantName, true
}

// HasVideoVariantName returns a boolean if a field has been set.
func (o *VideoView) HasVideoVariantName() bool {
	if o != nil && o.VideoVariantName != nil {
		return true
	}

	return false
}

// SetVideoVariantName gets a reference to the given string and assigns it to the VideoVariantName field.
func (o *VideoView) SetVideoVariantName(v string) {
	o.VideoVariantName = &v
}

// GetPrerollPlayed returns the PrerollPlayed field value if set, zero value otherwise.
func (o *VideoView) GetPrerollPlayed() bool {
	if o == nil || o.PrerollPlayed == nil {
		var ret bool
		return ret
	}
	return *o.PrerollPlayed
}

// GetPrerollPlayedOk returns a tuple with the PrerollPlayed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPrerollPlayedOk() (*bool, bool) {
	if o == nil || o.PrerollPlayed == nil {
		return nil, false
	}
	return o.PrerollPlayed, true
}

// HasPrerollPlayed returns a boolean if a field has been set.
func (o *VideoView) HasPrerollPlayed() bool {
	if o != nil && o.PrerollPlayed != nil {
		return true
	}

	return false
}

// SetPrerollPlayed gets a reference to the given bool and assigns it to the PrerollPlayed field.
func (o *VideoView) SetPrerollPlayed(v bool) {
	o.PrerollPlayed = &v
}

// GetViewerApplicationEngine returns the ViewerApplicationEngine field value if set, zero value otherwise.
func (o *VideoView) GetViewerApplicationEngine() string {
	if o == nil || o.ViewerApplicationEngine == nil {
		var ret string
		return ret
	}
	return *o.ViewerApplicationEngine
}

// GetViewerApplicationEngineOk returns a tuple with the ViewerApplicationEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerApplicationEngineOk() (*string, bool) {
	if o == nil || o.ViewerApplicationEngine == nil {
		return nil, false
	}
	return o.ViewerApplicationEngine, true
}

// HasViewerApplicationEngine returns a boolean if a field has been set.
func (o *VideoView) HasViewerApplicationEngine() bool {
	if o != nil && o.ViewerApplicationEngine != nil {
		return true
	}

	return false
}

// SetViewerApplicationEngine gets a reference to the given string and assigns it to the ViewerApplicationEngine field.
func (o *VideoView) SetViewerApplicationEngine(v string) {
	o.ViewerApplicationEngine = &v
}

// GetViewerOsArchitecture returns the ViewerOsArchitecture field value if set, zero value otherwise.
func (o *VideoView) GetViewerOsArchitecture() string {
	if o == nil || o.ViewerOsArchitecture == nil {
		var ret string
		return ret
	}
	return *o.ViewerOsArchitecture
}

// GetViewerOsArchitectureOk returns a tuple with the ViewerOsArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerOsArchitectureOk() (*string, bool) {
	if o == nil || o.ViewerOsArchitecture == nil {
		return nil, false
	}
	return o.ViewerOsArchitecture, true
}

// HasViewerOsArchitecture returns a boolean if a field has been set.
func (o *VideoView) HasViewerOsArchitecture() bool {
	if o != nil && o.ViewerOsArchitecture != nil {
		return true
	}

	return false
}

// SetViewerOsArchitecture gets a reference to the given string and assigns it to the ViewerOsArchitecture field.
func (o *VideoView) SetViewerOsArchitecture(v string) {
	o.ViewerOsArchitecture = &v
}

// GetPlayerErrorCode returns the PlayerErrorCode field value if set, zero value otherwise.
func (o *VideoView) GetPlayerErrorCode() string {
	if o == nil || o.PlayerErrorCode == nil {
		var ret string
		return ret
	}
	return *o.PlayerErrorCode
}

// GetPlayerErrorCodeOk returns a tuple with the PlayerErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerErrorCodeOk() (*string, bool) {
	if o == nil || o.PlayerErrorCode == nil {
		return nil, false
	}
	return o.PlayerErrorCode, true
}

// HasPlayerErrorCode returns a boolean if a field has been set.
func (o *VideoView) HasPlayerErrorCode() bool {
	if o != nil && o.PlayerErrorCode != nil {
		return true
	}

	return false
}

// SetPlayerErrorCode gets a reference to the given string and assigns it to the PlayerErrorCode field.
func (o *VideoView) SetPlayerErrorCode(v string) {
	o.PlayerErrorCode = &v
}

// GetBufferingRate returns the BufferingRate field value if set, zero value otherwise.
func (o *VideoView) GetBufferingRate() string {
	if o == nil || o.BufferingRate == nil {
		var ret string
		return ret
	}
	return *o.BufferingRate
}

// GetBufferingRateOk returns a tuple with the BufferingRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetBufferingRateOk() (*string, bool) {
	if o == nil || o.BufferingRate == nil {
		return nil, false
	}
	return o.BufferingRate, true
}

// HasBufferingRate returns a boolean if a field has been set.
func (o *VideoView) HasBufferingRate() bool {
	if o != nil && o.BufferingRate != nil {
		return true
	}

	return false
}

// SetBufferingRate gets a reference to the given string and assigns it to the BufferingRate field.
func (o *VideoView) SetBufferingRate(v string) {
	o.BufferingRate = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *VideoView) GetEvents() []VideoViewEvent {
	if o == nil || o.Events == nil {
		var ret []VideoViewEvent
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetEventsOk() (*[]VideoViewEvent, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *VideoView) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []VideoViewEvent and assigns it to the Events field.
func (o *VideoView) SetEvents(v []VideoViewEvent) {
	o.Events = &v
}

// GetPlayerName returns the PlayerName field value if set, zero value otherwise.
func (o *VideoView) GetPlayerName() string {
	if o == nil || o.PlayerName == nil {
		var ret string
		return ret
	}
	return *o.PlayerName
}

// GetPlayerNameOk returns a tuple with the PlayerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerNameOk() (*string, bool) {
	if o == nil || o.PlayerName == nil {
		return nil, false
	}
	return o.PlayerName, true
}

// HasPlayerName returns a boolean if a field has been set.
func (o *VideoView) HasPlayerName() bool {
	if o != nil && o.PlayerName != nil {
		return true
	}

	return false
}

// SetPlayerName gets a reference to the given string and assigns it to the PlayerName field.
func (o *VideoView) SetPlayerName(v string) {
	o.PlayerName = &v
}

// GetViewStart returns the ViewStart field value if set, zero value otherwise.
func (o *VideoView) GetViewStart() string {
	if o == nil || o.ViewStart == nil {
		var ret string
		return ret
	}
	return *o.ViewStart
}

// GetViewStartOk returns a tuple with the ViewStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewStartOk() (*string, bool) {
	if o == nil || o.ViewStart == nil {
		return nil, false
	}
	return o.ViewStart, true
}

// HasViewStart returns a boolean if a field has been set.
func (o *VideoView) HasViewStart() bool {
	if o != nil && o.ViewStart != nil {
		return true
	}

	return false
}

// SetViewStart gets a reference to the given string and assigns it to the ViewStart field.
func (o *VideoView) SetViewStart(v string) {
	o.ViewStart = &v
}

// GetViewAverageRequestThroughput returns the ViewAverageRequestThroughput field value if set, zero value otherwise.
func (o *VideoView) GetViewAverageRequestThroughput() int64 {
	if o == nil || o.ViewAverageRequestThroughput == nil {
		var ret int64
		return ret
	}
	return *o.ViewAverageRequestThroughput
}

// GetViewAverageRequestThroughputOk returns a tuple with the ViewAverageRequestThroughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewAverageRequestThroughputOk() (*int64, bool) {
	if o == nil || o.ViewAverageRequestThroughput == nil {
		return nil, false
	}
	return o.ViewAverageRequestThroughput, true
}

// HasViewAverageRequestThroughput returns a boolean if a field has been set.
func (o *VideoView) HasViewAverageRequestThroughput() bool {
	if o != nil && o.ViewAverageRequestThroughput != nil {
		return true
	}

	return false
}

// SetViewAverageRequestThroughput gets a reference to the given int64 and assigns it to the ViewAverageRequestThroughput field.
func (o *VideoView) SetViewAverageRequestThroughput(v int64) {
	o.ViewAverageRequestThroughput = &v
}

// GetVideoProducer returns the VideoProducer field value if set, zero value otherwise.
func (o *VideoView) GetVideoProducer() string {
	if o == nil || o.VideoProducer == nil {
		var ret string
		return ret
	}
	return *o.VideoProducer
}

// GetVideoProducerOk returns a tuple with the VideoProducer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoProducerOk() (*string, bool) {
	if o == nil || o.VideoProducer == nil {
		return nil, false
	}
	return o.VideoProducer, true
}

// HasVideoProducer returns a boolean if a field has been set.
func (o *VideoView) HasVideoProducer() bool {
	if o != nil && o.VideoProducer != nil {
		return true
	}

	return false
}

// SetVideoProducer gets a reference to the given string and assigns it to the VideoProducer field.
func (o *VideoView) SetVideoProducer(v string) {
	o.VideoProducer = &v
}

// GetErrorTypeId returns the ErrorTypeId field value if set, zero value otherwise.
func (o *VideoView) GetErrorTypeId() int32 {
	if o == nil || o.ErrorTypeId == nil {
		var ret int32
		return ret
	}
	return *o.ErrorTypeId
}

// GetErrorTypeIdOk returns a tuple with the ErrorTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetErrorTypeIdOk() (*int32, bool) {
	if o == nil || o.ErrorTypeId == nil {
		return nil, false
	}
	return o.ErrorTypeId, true
}

// HasErrorTypeId returns a boolean if a field has been set.
func (o *VideoView) HasErrorTypeId() bool {
	if o != nil && o.ErrorTypeId != nil {
		return true
	}

	return false
}

// SetErrorTypeId gets a reference to the given int32 and assigns it to the ErrorTypeId field.
func (o *VideoView) SetErrorTypeId(v int32) {
	o.ErrorTypeId = &v
}

// GetMuxViewerId returns the MuxViewerId field value if set, zero value otherwise.
func (o *VideoView) GetMuxViewerId() string {
	if o == nil || o.MuxViewerId == nil {
		var ret string
		return ret
	}
	return *o.MuxViewerId
}

// GetMuxViewerIdOk returns a tuple with the MuxViewerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetMuxViewerIdOk() (*string, bool) {
	if o == nil || o.MuxViewerId == nil {
		return nil, false
	}
	return o.MuxViewerId, true
}

// HasMuxViewerId returns a boolean if a field has been set.
func (o *VideoView) HasMuxViewerId() bool {
	if o != nil && o.MuxViewerId != nil {
		return true
	}

	return false
}

// SetMuxViewerId gets a reference to the given string and assigns it to the MuxViewerId field.
func (o *VideoView) SetMuxViewerId(v string) {
	o.MuxViewerId = &v
}

// GetVideoId returns the VideoId field value if set, zero value otherwise.
func (o *VideoView) GetVideoId() string {
	if o == nil || o.VideoId == nil {
		var ret string
		return ret
	}
	return *o.VideoId
}

// GetVideoIdOk returns a tuple with the VideoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoIdOk() (*string, bool) {
	if o == nil || o.VideoId == nil {
		return nil, false
	}
	return o.VideoId, true
}

// HasVideoId returns a boolean if a field has been set.
func (o *VideoView) HasVideoId() bool {
	if o != nil && o.VideoId != nil {
		return true
	}

	return false
}

// SetVideoId gets a reference to the given string and assigns it to the VideoId field.
func (o *VideoView) SetVideoId(v string) {
	o.VideoId = &v
}

// GetContinentCode returns the ContinentCode field value if set, zero value otherwise.
func (o *VideoView) GetContinentCode() string {
	if o == nil || o.ContinentCode == nil {
		var ret string
		return ret
	}
	return *o.ContinentCode
}

// GetContinentCodeOk returns a tuple with the ContinentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetContinentCodeOk() (*string, bool) {
	if o == nil || o.ContinentCode == nil {
		return nil, false
	}
	return o.ContinentCode, true
}

// HasContinentCode returns a boolean if a field has been set.
func (o *VideoView) HasContinentCode() bool {
	if o != nil && o.ContinentCode != nil {
		return true
	}

	return false
}

// SetContinentCode gets a reference to the given string and assigns it to the ContinentCode field.
func (o *VideoView) SetContinentCode(v string) {
	o.ContinentCode = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *VideoView) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *VideoView) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *VideoView) SetSessionId(v string) {
	o.SessionId = &v
}

// GetExitBeforeVideoStart returns the ExitBeforeVideoStart field value if set, zero value otherwise.
func (o *VideoView) GetExitBeforeVideoStart() bool {
	if o == nil || o.ExitBeforeVideoStart == nil {
		var ret bool
		return ret
	}
	return *o.ExitBeforeVideoStart
}

// GetExitBeforeVideoStartOk returns a tuple with the ExitBeforeVideoStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetExitBeforeVideoStartOk() (*bool, bool) {
	if o == nil || o.ExitBeforeVideoStart == nil {
		return nil, false
	}
	return o.ExitBeforeVideoStart, true
}

// HasExitBeforeVideoStart returns a boolean if a field has been set.
func (o *VideoView) HasExitBeforeVideoStart() bool {
	if o != nil && o.ExitBeforeVideoStart != nil {
		return true
	}

	return false
}

// SetExitBeforeVideoStart gets a reference to the given bool and assigns it to the ExitBeforeVideoStart field.
func (o *VideoView) SetExitBeforeVideoStart(v bool) {
	o.ExitBeforeVideoStart = &v
}

// GetVideoContentType returns the VideoContentType field value if set, zero value otherwise.
func (o *VideoView) GetVideoContentType() string {
	if o == nil || o.VideoContentType == nil {
		var ret string
		return ret
	}
	return *o.VideoContentType
}

// GetVideoContentTypeOk returns a tuple with the VideoContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoContentTypeOk() (*string, bool) {
	if o == nil || o.VideoContentType == nil {
		return nil, false
	}
	return o.VideoContentType, true
}

// HasVideoContentType returns a boolean if a field has been set.
func (o *VideoView) HasVideoContentType() bool {
	if o != nil && o.VideoContentType != nil {
		return true
	}

	return false
}

// SetVideoContentType gets a reference to the given string and assigns it to the VideoContentType field.
func (o *VideoView) SetVideoContentType(v string) {
	o.VideoContentType = &v
}

// GetViewerOsFamily returns the ViewerOsFamily field value if set, zero value otherwise.
func (o *VideoView) GetViewerOsFamily() string {
	if o == nil || o.ViewerOsFamily == nil {
		var ret string
		return ret
	}
	return *o.ViewerOsFamily
}

// GetViewerOsFamilyOk returns a tuple with the ViewerOsFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerOsFamilyOk() (*string, bool) {
	if o == nil || o.ViewerOsFamily == nil {
		return nil, false
	}
	return o.ViewerOsFamily, true
}

// HasViewerOsFamily returns a boolean if a field has been set.
func (o *VideoView) HasViewerOsFamily() bool {
	if o != nil && o.ViewerOsFamily != nil {
		return true
	}

	return false
}

// SetViewerOsFamily gets a reference to the given string and assigns it to the ViewerOsFamily field.
func (o *VideoView) SetViewerOsFamily(v string) {
	o.ViewerOsFamily = &v
}

// GetPlayerPoster returns the PlayerPoster field value if set, zero value otherwise.
func (o *VideoView) GetPlayerPoster() string {
	if o == nil || o.PlayerPoster == nil {
		var ret string
		return ret
	}
	return *o.PlayerPoster
}

// GetPlayerPosterOk returns a tuple with the PlayerPoster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerPosterOk() (*string, bool) {
	if o == nil || o.PlayerPoster == nil {
		return nil, false
	}
	return o.PlayerPoster, true
}

// HasPlayerPoster returns a boolean if a field has been set.
func (o *VideoView) HasPlayerPoster() bool {
	if o != nil && o.PlayerPoster != nil {
		return true
	}

	return false
}

// SetPlayerPoster gets a reference to the given string and assigns it to the PlayerPoster field.
func (o *VideoView) SetPlayerPoster(v string) {
	o.PlayerPoster = &v
}

// GetViewAverageRequestLatency returns the ViewAverageRequestLatency field value if set, zero value otherwise.
func (o *VideoView) GetViewAverageRequestLatency() int64 {
	if o == nil || o.ViewAverageRequestLatency == nil {
		var ret int64
		return ret
	}
	return *o.ViewAverageRequestLatency
}

// GetViewAverageRequestLatencyOk returns a tuple with the ViewAverageRequestLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewAverageRequestLatencyOk() (*int64, bool) {
	if o == nil || o.ViewAverageRequestLatency == nil {
		return nil, false
	}
	return o.ViewAverageRequestLatency, true
}

// HasViewAverageRequestLatency returns a boolean if a field has been set.
func (o *VideoView) HasViewAverageRequestLatency() bool {
	if o != nil && o.ViewAverageRequestLatency != nil {
		return true
	}

	return false
}

// SetViewAverageRequestLatency gets a reference to the given int64 and assigns it to the ViewAverageRequestLatency field.
func (o *VideoView) SetViewAverageRequestLatency(v int64) {
	o.ViewAverageRequestLatency = &v
}

// GetVideoVariantId returns the VideoVariantId field value if set, zero value otherwise.
func (o *VideoView) GetVideoVariantId() string {
	if o == nil || o.VideoVariantId == nil {
		var ret string
		return ret
	}
	return *o.VideoVariantId
}

// GetVideoVariantIdOk returns a tuple with the VideoVariantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoVariantIdOk() (*string, bool) {
	if o == nil || o.VideoVariantId == nil {
		return nil, false
	}
	return o.VideoVariantId, true
}

// HasVideoVariantId returns a boolean if a field has been set.
func (o *VideoView) HasVideoVariantId() bool {
	if o != nil && o.VideoVariantId != nil {
		return true
	}

	return false
}

// SetVideoVariantId gets a reference to the given string and assigns it to the VideoVariantId field.
func (o *VideoView) SetVideoVariantId(v string) {
	o.VideoVariantId = &v
}

// GetPlayerSourceDuration returns the PlayerSourceDuration field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceDuration() int64 {
	if o == nil || o.PlayerSourceDuration == nil {
		var ret int64
		return ret
	}
	return *o.PlayerSourceDuration
}

// GetPlayerSourceDurationOk returns a tuple with the PlayerSourceDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceDurationOk() (*int64, bool) {
	if o == nil || o.PlayerSourceDuration == nil {
		return nil, false
	}
	return o.PlayerSourceDuration, true
}

// HasPlayerSourceDuration returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceDuration() bool {
	if o != nil && o.PlayerSourceDuration != nil {
		return true
	}

	return false
}

// SetPlayerSourceDuration gets a reference to the given int64 and assigns it to the PlayerSourceDuration field.
func (o *VideoView) SetPlayerSourceDuration(v int64) {
	o.PlayerSourceDuration = &v
}

// GetPlayerSourceUrl returns the PlayerSourceUrl field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSourceUrl() string {
	if o == nil || o.PlayerSourceUrl == nil {
		var ret string
		return ret
	}
	return *o.PlayerSourceUrl
}

// GetPlayerSourceUrlOk returns a tuple with the PlayerSourceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSourceUrlOk() (*string, bool) {
	if o == nil || o.PlayerSourceUrl == nil {
		return nil, false
	}
	return o.PlayerSourceUrl, true
}

// HasPlayerSourceUrl returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSourceUrl() bool {
	if o != nil && o.PlayerSourceUrl != nil {
		return true
	}

	return false
}

// SetPlayerSourceUrl gets a reference to the given string and assigns it to the PlayerSourceUrl field.
func (o *VideoView) SetPlayerSourceUrl(v string) {
	o.PlayerSourceUrl = &v
}

// GetMuxApiVersion returns the MuxApiVersion field value if set, zero value otherwise.
func (o *VideoView) GetMuxApiVersion() string {
	if o == nil || o.MuxApiVersion == nil {
		var ret string
		return ret
	}
	return *o.MuxApiVersion
}

// GetMuxApiVersionOk returns a tuple with the MuxApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetMuxApiVersionOk() (*string, bool) {
	if o == nil || o.MuxApiVersion == nil {
		return nil, false
	}
	return o.MuxApiVersion, true
}

// HasMuxApiVersion returns a boolean if a field has been set.
func (o *VideoView) HasMuxApiVersion() bool {
	if o != nil && o.MuxApiVersion != nil {
		return true
	}

	return false
}

// SetMuxApiVersion gets a reference to the given string and assigns it to the MuxApiVersion field.
func (o *VideoView) SetMuxApiVersion(v string) {
	o.MuxApiVersion = &v
}

// GetVideoTitle returns the VideoTitle field value if set, zero value otherwise.
func (o *VideoView) GetVideoTitle() string {
	if o == nil || o.VideoTitle == nil {
		var ret string
		return ret
	}
	return *o.VideoTitle
}

// GetVideoTitleOk returns a tuple with the VideoTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoTitleOk() (*string, bool) {
	if o == nil || o.VideoTitle == nil {
		return nil, false
	}
	return o.VideoTitle, true
}

// HasVideoTitle returns a boolean if a field has been set.
func (o *VideoView) HasVideoTitle() bool {
	if o != nil && o.VideoTitle != nil {
		return true
	}

	return false
}

// SetVideoTitle gets a reference to the given string and assigns it to the VideoTitle field.
func (o *VideoView) SetVideoTitle(v string) {
	o.VideoTitle = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VideoView) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VideoView) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VideoView) SetId(v string) {
	o.Id = &v
}

// GetShortTime returns the ShortTime field value if set, zero value otherwise.
func (o *VideoView) GetShortTime() string {
	if o == nil || o.ShortTime == nil {
		var ret string
		return ret
	}
	return *o.ShortTime
}

// GetShortTimeOk returns a tuple with the ShortTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetShortTimeOk() (*string, bool) {
	if o == nil || o.ShortTime == nil {
		return nil, false
	}
	return o.ShortTime, true
}

// HasShortTime returns a boolean if a field has been set.
func (o *VideoView) HasShortTime() bool {
	if o != nil && o.ShortTime != nil {
		return true
	}

	return false
}

// SetShortTime gets a reference to the given string and assigns it to the ShortTime field.
func (o *VideoView) SetShortTime(v string) {
	o.ShortTime = &v
}

// GetRebufferPercentage returns the RebufferPercentage field value if set, zero value otherwise.
func (o *VideoView) GetRebufferPercentage() string {
	if o == nil || o.RebufferPercentage == nil {
		var ret string
		return ret
	}
	return *o.RebufferPercentage
}

// GetRebufferPercentageOk returns a tuple with the RebufferPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetRebufferPercentageOk() (*string, bool) {
	if o == nil || o.RebufferPercentage == nil {
		return nil, false
	}
	return o.RebufferPercentage, true
}

// HasRebufferPercentage returns a boolean if a field has been set.
func (o *VideoView) HasRebufferPercentage() bool {
	if o != nil && o.RebufferPercentage != nil {
		return true
	}

	return false
}

// SetRebufferPercentage gets a reference to the given string and assigns it to the RebufferPercentage field.
func (o *VideoView) SetRebufferPercentage(v string) {
	o.RebufferPercentage = &v
}

// GetTimeToFirstFrame returns the TimeToFirstFrame field value if set, zero value otherwise.
func (o *VideoView) GetTimeToFirstFrame() int64 {
	if o == nil || o.TimeToFirstFrame == nil {
		var ret int64
		return ret
	}
	return *o.TimeToFirstFrame
}

// GetTimeToFirstFrameOk returns a tuple with the TimeToFirstFrame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetTimeToFirstFrameOk() (*int64, bool) {
	if o == nil || o.TimeToFirstFrame == nil {
		return nil, false
	}
	return o.TimeToFirstFrame, true
}

// HasTimeToFirstFrame returns a boolean if a field has been set.
func (o *VideoView) HasTimeToFirstFrame() bool {
	if o != nil && o.TimeToFirstFrame != nil {
		return true
	}

	return false
}

// SetTimeToFirstFrame gets a reference to the given int64 and assigns it to the TimeToFirstFrame field.
func (o *VideoView) SetTimeToFirstFrame(v int64) {
	o.TimeToFirstFrame = &v
}

// GetViewerUserId returns the ViewerUserId field value if set, zero value otherwise.
func (o *VideoView) GetViewerUserId() string {
	if o == nil || o.ViewerUserId == nil {
		var ret string
		return ret
	}
	return *o.ViewerUserId
}

// GetViewerUserIdOk returns a tuple with the ViewerUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerUserIdOk() (*string, bool) {
	if o == nil || o.ViewerUserId == nil {
		return nil, false
	}
	return o.ViewerUserId, true
}

// HasViewerUserId returns a boolean if a field has been set.
func (o *VideoView) HasViewerUserId() bool {
	if o != nil && o.ViewerUserId != nil {
		return true
	}

	return false
}

// SetViewerUserId gets a reference to the given string and assigns it to the ViewerUserId field.
func (o *VideoView) SetViewerUserId(v string) {
	o.ViewerUserId = &v
}

// GetVideoStreamType returns the VideoStreamType field value if set, zero value otherwise.
func (o *VideoView) GetVideoStreamType() string {
	if o == nil || o.VideoStreamType == nil {
		var ret string
		return ret
	}
	return *o.VideoStreamType
}

// GetVideoStreamTypeOk returns a tuple with the VideoStreamType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetVideoStreamTypeOk() (*string, bool) {
	if o == nil || o.VideoStreamType == nil {
		return nil, false
	}
	return o.VideoStreamType, true
}

// HasVideoStreamType returns a boolean if a field has been set.
func (o *VideoView) HasVideoStreamType() bool {
	if o != nil && o.VideoStreamType != nil {
		return true
	}

	return false
}

// SetVideoStreamType gets a reference to the given string and assigns it to the VideoStreamType field.
func (o *VideoView) SetVideoStreamType(v string) {
	o.VideoStreamType = &v
}

// GetPlayerStartupTime returns the PlayerStartupTime field value if set, zero value otherwise.
func (o *VideoView) GetPlayerStartupTime() int64 {
	if o == nil || o.PlayerStartupTime == nil {
		var ret int64
		return ret
	}
	return *o.PlayerStartupTime
}

// GetPlayerStartupTimeOk returns a tuple with the PlayerStartupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerStartupTimeOk() (*int64, bool) {
	if o == nil || o.PlayerStartupTime == nil {
		return nil, false
	}
	return o.PlayerStartupTime, true
}

// HasPlayerStartupTime returns a boolean if a field has been set.
func (o *VideoView) HasPlayerStartupTime() bool {
	if o != nil && o.PlayerStartupTime != nil {
		return true
	}

	return false
}

// SetPlayerStartupTime gets a reference to the given int64 and assigns it to the PlayerStartupTime field.
func (o *VideoView) SetPlayerStartupTime(v int64) {
	o.PlayerStartupTime = &v
}

// GetViewerApplicationVersion returns the ViewerApplicationVersion field value if set, zero value otherwise.
func (o *VideoView) GetViewerApplicationVersion() string {
	if o == nil || o.ViewerApplicationVersion == nil {
		var ret string
		return ret
	}
	return *o.ViewerApplicationVersion
}

// GetViewerApplicationVersionOk returns a tuple with the ViewerApplicationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewerApplicationVersionOk() (*string, bool) {
	if o == nil || o.ViewerApplicationVersion == nil {
		return nil, false
	}
	return o.ViewerApplicationVersion, true
}

// HasViewerApplicationVersion returns a boolean if a field has been set.
func (o *VideoView) HasViewerApplicationVersion() bool {
	if o != nil && o.ViewerApplicationVersion != nil {
		return true
	}

	return false
}

// SetViewerApplicationVersion gets a reference to the given string and assigns it to the ViewerApplicationVersion field.
func (o *VideoView) SetViewerApplicationVersion(v string) {
	o.ViewerApplicationVersion = &v
}

// GetViewMaxDownscalePercentage returns the ViewMaxDownscalePercentage field value if set, zero value otherwise.
func (o *VideoView) GetViewMaxDownscalePercentage() string {
	if o == nil || o.ViewMaxDownscalePercentage == nil {
		var ret string
		return ret
	}
	return *o.ViewMaxDownscalePercentage
}

// GetViewMaxDownscalePercentageOk returns a tuple with the ViewMaxDownscalePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewMaxDownscalePercentageOk() (*string, bool) {
	if o == nil || o.ViewMaxDownscalePercentage == nil {
		return nil, false
	}
	return o.ViewMaxDownscalePercentage, true
}

// HasViewMaxDownscalePercentage returns a boolean if a field has been set.
func (o *VideoView) HasViewMaxDownscalePercentage() bool {
	if o != nil && o.ViewMaxDownscalePercentage != nil {
		return true
	}

	return false
}

// SetViewMaxDownscalePercentage gets a reference to the given string and assigns it to the ViewMaxDownscalePercentage field.
func (o *VideoView) SetViewMaxDownscalePercentage(v string) {
	o.ViewMaxDownscalePercentage = &v
}

// GetViewMaxUpscalePercentage returns the ViewMaxUpscalePercentage field value if set, zero value otherwise.
func (o *VideoView) GetViewMaxUpscalePercentage() string {
	if o == nil || o.ViewMaxUpscalePercentage == nil {
		var ret string
		return ret
	}
	return *o.ViewMaxUpscalePercentage
}

// GetViewMaxUpscalePercentageOk returns a tuple with the ViewMaxUpscalePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetViewMaxUpscalePercentageOk() (*string, bool) {
	if o == nil || o.ViewMaxUpscalePercentage == nil {
		return nil, false
	}
	return o.ViewMaxUpscalePercentage, true
}

// HasViewMaxUpscalePercentage returns a boolean if a field has been set.
func (o *VideoView) HasViewMaxUpscalePercentage() bool {
	if o != nil && o.ViewMaxUpscalePercentage != nil {
		return true
	}

	return false
}

// SetViewMaxUpscalePercentage gets a reference to the given string and assigns it to the ViewMaxUpscalePercentage field.
func (o *VideoView) SetViewMaxUpscalePercentage(v string) {
	o.ViewMaxUpscalePercentage = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *VideoView) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *VideoView) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *VideoView) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetUsedFullscreen returns the UsedFullscreen field value if set, zero value otherwise.
func (o *VideoView) GetUsedFullscreen() bool {
	if o == nil || o.UsedFullscreen == nil {
		var ret bool
		return ret
	}
	return *o.UsedFullscreen
}

// GetUsedFullscreenOk returns a tuple with the UsedFullscreen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetUsedFullscreenOk() (*bool, bool) {
	if o == nil || o.UsedFullscreen == nil {
		return nil, false
	}
	return o.UsedFullscreen, true
}

// HasUsedFullscreen returns a boolean if a field has been set.
func (o *VideoView) HasUsedFullscreen() bool {
	if o != nil && o.UsedFullscreen != nil {
		return true
	}

	return false
}

// SetUsedFullscreen gets a reference to the given bool and assigns it to the UsedFullscreen field.
func (o *VideoView) SetUsedFullscreen(v bool) {
	o.UsedFullscreen = &v
}

// GetIsp returns the Isp field value if set, zero value otherwise.
func (o *VideoView) GetIsp() string {
	if o == nil || o.Isp == nil {
		var ret string
		return ret
	}
	return *o.Isp
}

// GetIspOk returns a tuple with the Isp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetIspOk() (*string, bool) {
	if o == nil || o.Isp == nil {
		return nil, false
	}
	return o.Isp, true
}

// HasIsp returns a boolean if a field has been set.
func (o *VideoView) HasIsp() bool {
	if o != nil && o.Isp != nil {
		return true
	}

	return false
}

// SetIsp gets a reference to the given string and assigns it to the Isp field.
func (o *VideoView) SetIsp(v string) {
	o.Isp = &v
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *VideoView) GetPropertyId() int64 {
	if o == nil || o.PropertyId == nil {
		var ret int64
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPropertyIdOk() (*int64, bool) {
	if o == nil || o.PropertyId == nil {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *VideoView) HasPropertyId() bool {
	if o != nil && o.PropertyId != nil {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given int64 and assigns it to the PropertyId field.
func (o *VideoView) SetPropertyId(v int64) {
	o.PropertyId = &v
}

// GetPlayerAutoplay returns the PlayerAutoplay field value if set, zero value otherwise.
func (o *VideoView) GetPlayerAutoplay() bool {
	if o == nil || o.PlayerAutoplay == nil {
		var ret bool
		return ret
	}
	return *o.PlayerAutoplay
}

// GetPlayerAutoplayOk returns a tuple with the PlayerAutoplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerAutoplayOk() (*bool, bool) {
	if o == nil || o.PlayerAutoplay == nil {
		return nil, false
	}
	return o.PlayerAutoplay, true
}

// HasPlayerAutoplay returns a boolean if a field has been set.
func (o *VideoView) HasPlayerAutoplay() bool {
	if o != nil && o.PlayerAutoplay != nil {
		return true
	}

	return false
}

// SetPlayerAutoplay gets a reference to the given bool and assigns it to the PlayerAutoplay field.
func (o *VideoView) SetPlayerAutoplay(v bool) {
	o.PlayerAutoplay = &v
}

// GetPlayerHeight returns the PlayerHeight field value if set, zero value otherwise.
func (o *VideoView) GetPlayerHeight() int32 {
	if o == nil || o.PlayerHeight == nil {
		var ret int32
		return ret
	}
	return *o.PlayerHeight
}

// GetPlayerHeightOk returns a tuple with the PlayerHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerHeightOk() (*int32, bool) {
	if o == nil || o.PlayerHeight == nil {
		return nil, false
	}
	return o.PlayerHeight, true
}

// HasPlayerHeight returns a boolean if a field has been set.
func (o *VideoView) HasPlayerHeight() bool {
	if o != nil && o.PlayerHeight != nil {
		return true
	}

	return false
}

// SetPlayerHeight gets a reference to the given int32 and assigns it to the PlayerHeight field.
func (o *VideoView) SetPlayerHeight(v int32) {
	o.PlayerHeight = &v
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *VideoView) GetAsn() int64 {
	if o == nil || o.Asn == nil {
		var ret int64
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetAsnOk() (*int64, bool) {
	if o == nil || o.Asn == nil {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *VideoView) HasAsn() bool {
	if o != nil && o.Asn != nil {
		return true
	}

	return false
}

// SetAsn gets a reference to the given int64 and assigns it to the Asn field.
func (o *VideoView) SetAsn(v int64) {
	o.Asn = &v
}

// GetAsnName returns the AsnName field value if set, zero value otherwise.
func (o *VideoView) GetAsnName() string {
	if o == nil || o.AsnName == nil {
		var ret string
		return ret
	}
	return *o.AsnName
}

// GetAsnNameOk returns a tuple with the AsnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetAsnNameOk() (*string, bool) {
	if o == nil || o.AsnName == nil {
		return nil, false
	}
	return o.AsnName, true
}

// HasAsnName returns a boolean if a field has been set.
func (o *VideoView) HasAsnName() bool {
	if o != nil && o.AsnName != nil {
		return true
	}

	return false
}

// SetAsnName gets a reference to the given string and assigns it to the AsnName field.
func (o *VideoView) SetAsnName(v string) {
	o.AsnName = &v
}

// GetQualityScore returns the QualityScore field value if set, zero value otherwise.
func (o *VideoView) GetQualityScore() string {
	if o == nil || o.QualityScore == nil {
		var ret string
		return ret
	}
	return *o.QualityScore
}

// GetQualityScoreOk returns a tuple with the QualityScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetQualityScoreOk() (*string, bool) {
	if o == nil || o.QualityScore == nil {
		return nil, false
	}
	return o.QualityScore, true
}

// HasQualityScore returns a boolean if a field has been set.
func (o *VideoView) HasQualityScore() bool {
	if o != nil && o.QualityScore != nil {
		return true
	}

	return false
}

// SetQualityScore gets a reference to the given string and assigns it to the QualityScore field.
func (o *VideoView) SetQualityScore(v string) {
	o.QualityScore = &v
}

// GetPlayerSoftwareVersion returns the PlayerSoftwareVersion field value if set, zero value otherwise.
func (o *VideoView) GetPlayerSoftwareVersion() string {
	if o == nil || o.PlayerSoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.PlayerSoftwareVersion
}

// GetPlayerSoftwareVersionOk returns a tuple with the PlayerSoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerSoftwareVersionOk() (*string, bool) {
	if o == nil || o.PlayerSoftwareVersion == nil {
		return nil, false
	}
	return o.PlayerSoftwareVersion, true
}

// HasPlayerSoftwareVersion returns a boolean if a field has been set.
func (o *VideoView) HasPlayerSoftwareVersion() bool {
	if o != nil && o.PlayerSoftwareVersion != nil {
		return true
	}

	return false
}

// SetPlayerSoftwareVersion gets a reference to the given string and assigns it to the PlayerSoftwareVersion field.
func (o *VideoView) SetPlayerSoftwareVersion(v string) {
	o.PlayerSoftwareVersion = &v
}

// GetPlayerMuxPluginName returns the PlayerMuxPluginName field value if set, zero value otherwise.
func (o *VideoView) GetPlayerMuxPluginName() string {
	if o == nil || o.PlayerMuxPluginName == nil {
		var ret string
		return ret
	}
	return *o.PlayerMuxPluginName
}

// GetPlayerMuxPluginNameOk returns a tuple with the PlayerMuxPluginName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoView) GetPlayerMuxPluginNameOk() (*string, bool) {
	if o == nil || o.PlayerMuxPluginName == nil {
		return nil, false
	}
	return o.PlayerMuxPluginName, true
}

// HasPlayerMuxPluginName returns a boolean if a field has been set.
func (o *VideoView) HasPlayerMuxPluginName() bool {
	if o != nil && o.PlayerMuxPluginName != nil {
		return true
	}

	return false
}

// SetPlayerMuxPluginName gets a reference to the given string and assigns it to the PlayerMuxPluginName field.
func (o *VideoView) SetPlayerMuxPluginName(v string) {
	o.PlayerMuxPluginName = &v
}

func (o VideoView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ViewTotalUpscaling != nil {
		toSerialize["view_total_upscaling"] = o.ViewTotalUpscaling
	}
	if o.PrerollAdAssetHostname != nil {
		toSerialize["preroll_ad_asset_hostname"] = o.PrerollAdAssetHostname
	}
	if o.PlayerSourceDomain != nil {
		toSerialize["player_source_domain"] = o.PlayerSourceDomain
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.ViewerUserAgent != nil {
		toSerialize["viewer_user_agent"] = o.ViewerUserAgent
	}
	if o.PrerollRequested != nil {
		toSerialize["preroll_requested"] = o.PrerollRequested
	}
	if o.PageType != nil {
		toSerialize["page_type"] = o.PageType
	}
	if o.StartupScore != nil {
		toSerialize["startup_score"] = o.StartupScore
	}
	if o.ViewSeekDuration != nil {
		toSerialize["view_seek_duration"] = o.ViewSeekDuration
	}
	if o.CountryName != nil {
		toSerialize["country_name"] = o.CountryName
	}
	if o.PlayerSourceHeight != nil {
		toSerialize["player_source_height"] = o.PlayerSourceHeight
	}
	if o.Longitude != nil {
		toSerialize["longitude"] = o.Longitude
	}
	if o.BufferingCount != nil {
		toSerialize["buffering_count"] = o.BufferingCount
	}
	if o.VideoDuration != nil {
		toSerialize["video_duration"] = o.VideoDuration
	}
	if o.PlayerSourceType != nil {
		toSerialize["player_source_type"] = o.PlayerSourceType
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.ViewId != nil {
		toSerialize["view_id"] = o.ViewId
	}
	if o.PlatformDescription != nil {
		toSerialize["platform_description"] = o.PlatformDescription
	}
	if o.VideoStartupPrerollRequestTime != nil {
		toSerialize["video_startup_preroll_request_time"] = o.VideoStartupPrerollRequestTime
	}
	if o.ViewerDeviceName != nil {
		toSerialize["viewer_device_name"] = o.ViewerDeviceName
	}
	if o.VideoSeries != nil {
		toSerialize["video_series"] = o.VideoSeries
	}
	if o.ViewerApplicationName != nil {
		toSerialize["viewer_application_name"] = o.ViewerApplicationName
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.ViewTotalContentPlaybackTime != nil {
		toSerialize["view_total_content_playback_time"] = o.ViewTotalContentPlaybackTime
	}
	if o.Cdn != nil {
		toSerialize["cdn"] = o.Cdn
	}
	if o.PlayerInstanceId != nil {
		toSerialize["player_instance_id"] = o.PlayerInstanceId
	}
	if o.VideoLanguage != nil {
		toSerialize["video_language"] = o.VideoLanguage
	}
	if o.PlayerSourceWidth != nil {
		toSerialize["player_source_width"] = o.PlayerSourceWidth
	}
	if o.PlayerErrorMessage != nil {
		toSerialize["player_error_message"] = o.PlayerErrorMessage
	}
	if o.PlayerMuxPluginVersion != nil {
		toSerialize["player_mux_plugin_version"] = o.PlayerMuxPluginVersion
	}
	if o.Watched != nil {
		toSerialize["watched"] = o.Watched
	}
	if o.PlaybackScore != nil {
		toSerialize["playback_score"] = o.PlaybackScore
	}
	if o.PageUrl != nil {
		toSerialize["page_url"] = o.PageUrl
	}
	if o.Metro != nil {
		toSerialize["metro"] = o.Metro
	}
	if o.ViewMaxRequestLatency != nil {
		toSerialize["view_max_request_latency"] = o.ViewMaxRequestLatency
	}
	if o.RequestsForFirstPreroll != nil {
		toSerialize["requests_for_first_preroll"] = o.RequestsForFirstPreroll
	}
	if o.ViewTotalDownscaling != nil {
		toSerialize["view_total_downscaling"] = o.ViewTotalDownscaling
	}
	if o.Latitude != nil {
		toSerialize["latitude"] = o.Latitude
	}
	if o.PlayerSourceHostName != nil {
		toSerialize["player_source_host_name"] = o.PlayerSourceHostName
	}
	if o.InsertedAt != nil {
		toSerialize["inserted_at"] = o.InsertedAt
	}
	if o.ViewEnd != nil {
		toSerialize["view_end"] = o.ViewEnd
	}
	if o.MuxEmbedVersion != nil {
		toSerialize["mux_embed_version"] = o.MuxEmbedVersion
	}
	if o.PlayerLanguage != nil {
		toSerialize["player_language"] = o.PlayerLanguage
	}
	if o.PageLoadTime != nil {
		toSerialize["page_load_time"] = o.PageLoadTime
	}
	if o.ViewerDeviceCategory != nil {
		toSerialize["viewer_device_category"] = o.ViewerDeviceCategory
	}
	if o.VideoStartupPrerollLoadTime != nil {
		toSerialize["video_startup_preroll_load_time"] = o.VideoStartupPrerollLoadTime
	}
	if o.PlayerVersion != nil {
		toSerialize["player_version"] = o.PlayerVersion
	}
	if o.WatchTime != nil {
		toSerialize["watch_time"] = o.WatchTime
	}
	if o.PlayerSourceStreamType != nil {
		toSerialize["player_source_stream_type"] = o.PlayerSourceStreamType
	}
	if o.PrerollAdTagHostname != nil {
		toSerialize["preroll_ad_tag_hostname"] = o.PrerollAdTagHostname
	}
	if o.ViewerDeviceManufacturer != nil {
		toSerialize["viewer_device_manufacturer"] = o.ViewerDeviceManufacturer
	}
	if o.RebufferingScore != nil {
		toSerialize["rebuffering_score"] = o.RebufferingScore
	}
	if o.ExperimentName != nil {
		toSerialize["experiment_name"] = o.ExperimentName
	}
	if o.ViewerOsVersion != nil {
		toSerialize["viewer_os_version"] = o.ViewerOsVersion
	}
	if o.PlayerPreload != nil {
		toSerialize["player_preload"] = o.PlayerPreload
	}
	if o.BufferingDuration != nil {
		toSerialize["buffering_duration"] = o.BufferingDuration
	}
	if o.PlayerViewCount != nil {
		toSerialize["player_view_count"] = o.PlayerViewCount
	}
	if o.PlayerSoftware != nil {
		toSerialize["player_software"] = o.PlayerSoftware
	}
	if o.PlayerLoadTime != nil {
		toSerialize["player_load_time"] = o.PlayerLoadTime
	}
	if o.PlatformSummary != nil {
		toSerialize["platform_summary"] = o.PlatformSummary
	}
	if o.VideoEncodingVariant != nil {
		toSerialize["video_encoding_variant"] = o.VideoEncodingVariant
	}
	if o.PlayerWidth != nil {
		toSerialize["player_width"] = o.PlayerWidth
	}
	if o.ViewSeekCount != nil {
		toSerialize["view_seek_count"] = o.ViewSeekCount
	}
	if o.ViewerExperienceScore != nil {
		toSerialize["viewer_experience_score"] = o.ViewerExperienceScore
	}
	if o.ViewErrorId != nil {
		toSerialize["view_error_id"] = o.ViewErrorId
	}
	if o.VideoVariantName != nil {
		toSerialize["video_variant_name"] = o.VideoVariantName
	}
	if o.PrerollPlayed != nil {
		toSerialize["preroll_played"] = o.PrerollPlayed
	}
	if o.ViewerApplicationEngine != nil {
		toSerialize["viewer_application_engine"] = o.ViewerApplicationEngine
	}
	if o.ViewerOsArchitecture != nil {
		toSerialize["viewer_os_architecture"] = o.ViewerOsArchitecture
	}
	if o.PlayerErrorCode != nil {
		toSerialize["player_error_code"] = o.PlayerErrorCode
	}
	if o.BufferingRate != nil {
		toSerialize["buffering_rate"] = o.BufferingRate
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.PlayerName != nil {
		toSerialize["player_name"] = o.PlayerName
	}
	if o.ViewStart != nil {
		toSerialize["view_start"] = o.ViewStart
	}
	if o.ViewAverageRequestThroughput != nil {
		toSerialize["view_average_request_throughput"] = o.ViewAverageRequestThroughput
	}
	if o.VideoProducer != nil {
		toSerialize["video_producer"] = o.VideoProducer
	}
	if o.ErrorTypeId != nil {
		toSerialize["error_type_id"] = o.ErrorTypeId
	}
	if o.MuxViewerId != nil {
		toSerialize["mux_viewer_id"] = o.MuxViewerId
	}
	if o.VideoId != nil {
		toSerialize["video_id"] = o.VideoId
	}
	if o.ContinentCode != nil {
		toSerialize["continent_code"] = o.ContinentCode
	}
	if o.SessionId != nil {
		toSerialize["session_id"] = o.SessionId
	}
	if o.ExitBeforeVideoStart != nil {
		toSerialize["exit_before_video_start"] = o.ExitBeforeVideoStart
	}
	if o.VideoContentType != nil {
		toSerialize["video_content_type"] = o.VideoContentType
	}
	if o.ViewerOsFamily != nil {
		toSerialize["viewer_os_family"] = o.ViewerOsFamily
	}
	if o.PlayerPoster != nil {
		toSerialize["player_poster"] = o.PlayerPoster
	}
	if o.ViewAverageRequestLatency != nil {
		toSerialize["view_average_request_latency"] = o.ViewAverageRequestLatency
	}
	if o.VideoVariantId != nil {
		toSerialize["video_variant_id"] = o.VideoVariantId
	}
	if o.PlayerSourceDuration != nil {
		toSerialize["player_source_duration"] = o.PlayerSourceDuration
	}
	if o.PlayerSourceUrl != nil {
		toSerialize["player_source_url"] = o.PlayerSourceUrl
	}
	if o.MuxApiVersion != nil {
		toSerialize["mux_api_version"] = o.MuxApiVersion
	}
	if o.VideoTitle != nil {
		toSerialize["video_title"] = o.VideoTitle
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ShortTime != nil {
		toSerialize["short_time"] = o.ShortTime
	}
	if o.RebufferPercentage != nil {
		toSerialize["rebuffer_percentage"] = o.RebufferPercentage
	}
	if o.TimeToFirstFrame != nil {
		toSerialize["time_to_first_frame"] = o.TimeToFirstFrame
	}
	if o.ViewerUserId != nil {
		toSerialize["viewer_user_id"] = o.ViewerUserId
	}
	if o.VideoStreamType != nil {
		toSerialize["video_stream_type"] = o.VideoStreamType
	}
	if o.PlayerStartupTime != nil {
		toSerialize["player_startup_time"] = o.PlayerStartupTime
	}
	if o.ViewerApplicationVersion != nil {
		toSerialize["viewer_application_version"] = o.ViewerApplicationVersion
	}
	if o.ViewMaxDownscalePercentage != nil {
		toSerialize["view_max_downscale_percentage"] = o.ViewMaxDownscalePercentage
	}
	if o.ViewMaxUpscalePercentage != nil {
		toSerialize["view_max_upscale_percentage"] = o.ViewMaxUpscalePercentage
	}
	if o.CountryCode != nil {
		toSerialize["country_code"] = o.CountryCode
	}
	if o.UsedFullscreen != nil {
		toSerialize["used_fullscreen"] = o.UsedFullscreen
	}
	if o.Isp != nil {
		toSerialize["isp"] = o.Isp
	}
	if o.PropertyId != nil {
		toSerialize["property_id"] = o.PropertyId
	}
	if o.PlayerAutoplay != nil {
		toSerialize["player_autoplay"] = o.PlayerAutoplay
	}
	if o.PlayerHeight != nil {
		toSerialize["player_height"] = o.PlayerHeight
	}
	if o.Asn != nil {
		toSerialize["asn"] = o.Asn
	}
	if o.AsnName != nil {
		toSerialize["asn_name"] = o.AsnName
	}
	if o.QualityScore != nil {
		toSerialize["quality_score"] = o.QualityScore
	}
	if o.PlayerSoftwareVersion != nil {
		toSerialize["player_software_version"] = o.PlayerSoftwareVersion
	}
	if o.PlayerMuxPluginName != nil {
		toSerialize["player_mux_plugin_name"] = o.PlayerMuxPluginName
	}
	return json.Marshal(toSerialize)
}

type NullableVideoView struct {
	value *VideoView
	isSet bool
}

func (v NullableVideoView) Get() *VideoView {
	return v.value
}

func (v *NullableVideoView) Set(val *VideoView) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoView) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoView(val *VideoView) *NullableVideoView {
	return &NullableVideoView{value: val, isSet: true}
}

func (v NullableVideoView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


