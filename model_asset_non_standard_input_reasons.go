/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// AssetNonStandardInputReasons An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/video/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.
type AssetNonStandardInputReasons struct {
	// The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`.
	VideoCodec *string `json:"video_codec,omitempty"`
	// The audio codec used on the input file. Non-AAC audio codecs are non-standard.
	AudioCodec *string `json:"audio_codec,omitempty"`
	// The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 10 seconds.
	VideoGopSize *string `json:"video_gop_size,omitempty"`
	// The video frame rate of the input file. Video with average frames per second (fps) less than 10 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track.
	VideoFrameRate *string `json:"video_frame_rate,omitempty"`
	// The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels.
	VideoResolution *string `json:"video_resolution,omitempty"`
	// The video pixel aspect ratio of the input file.
	PixelAspectRatio *string `json:"pixel_aspect_ratio,omitempty"`
	// Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List.
	VideoEditList *string `json:"video_edit_list,omitempty"`
	// Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List.
	AudioEditList *string `json:"audio_edit_list,omitempty"`
	// A catch-all reason when the input file in created with non-standard encoding parameters.
	UnexpectedMediaFileParameters *string `json:"unexpected_media_file_parameters,omitempty"`
}

// NewAssetNonStandardInputReasons instantiates a new AssetNonStandardInputReasons object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetNonStandardInputReasons() *AssetNonStandardInputReasons {
	this := AssetNonStandardInputReasons{}
	return &this
}

// NewAssetNonStandardInputReasonsWithDefaults instantiates a new AssetNonStandardInputReasons object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetNonStandardInputReasonsWithDefaults() *AssetNonStandardInputReasons {
	this := AssetNonStandardInputReasons{}
	return &this
}

// GetVideoCodec returns the VideoCodec field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetVideoCodec() string {
	if o == nil || o.VideoCodec == nil {
		var ret string
		return ret
	}
	return *o.VideoCodec
}

// GetVideoCodecOk returns a tuple with the VideoCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetVideoCodecOk() (*string, bool) {
	if o == nil || o.VideoCodec == nil {
		return nil, false
	}
	return o.VideoCodec, true
}

// HasVideoCodec returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasVideoCodec() bool {
	if o != nil && o.VideoCodec != nil {
		return true
	}

	return false
}

// SetVideoCodec gets a reference to the given string and assigns it to the VideoCodec field.
func (o *AssetNonStandardInputReasons) SetVideoCodec(v string) {
	o.VideoCodec = &v
}

// GetAudioCodec returns the AudioCodec field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetAudioCodec() string {
	if o == nil || o.AudioCodec == nil {
		var ret string
		return ret
	}
	return *o.AudioCodec
}

// GetAudioCodecOk returns a tuple with the AudioCodec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetAudioCodecOk() (*string, bool) {
	if o == nil || o.AudioCodec == nil {
		return nil, false
	}
	return o.AudioCodec, true
}

// HasAudioCodec returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasAudioCodec() bool {
	if o != nil && o.AudioCodec != nil {
		return true
	}

	return false
}

// SetAudioCodec gets a reference to the given string and assigns it to the AudioCodec field.
func (o *AssetNonStandardInputReasons) SetAudioCodec(v string) {
	o.AudioCodec = &v
}

// GetVideoGopSize returns the VideoGopSize field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetVideoGopSize() string {
	if o == nil || o.VideoGopSize == nil {
		var ret string
		return ret
	}
	return *o.VideoGopSize
}

// GetVideoGopSizeOk returns a tuple with the VideoGopSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetVideoGopSizeOk() (*string, bool) {
	if o == nil || o.VideoGopSize == nil {
		return nil, false
	}
	return o.VideoGopSize, true
}

// HasVideoGopSize returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasVideoGopSize() bool {
	if o != nil && o.VideoGopSize != nil {
		return true
	}

	return false
}

// SetVideoGopSize gets a reference to the given string and assigns it to the VideoGopSize field.
func (o *AssetNonStandardInputReasons) SetVideoGopSize(v string) {
	o.VideoGopSize = &v
}

// GetVideoFrameRate returns the VideoFrameRate field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetVideoFrameRate() string {
	if o == nil || o.VideoFrameRate == nil {
		var ret string
		return ret
	}
	return *o.VideoFrameRate
}

// GetVideoFrameRateOk returns a tuple with the VideoFrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetVideoFrameRateOk() (*string, bool) {
	if o == nil || o.VideoFrameRate == nil {
		return nil, false
	}
	return o.VideoFrameRate, true
}

// HasVideoFrameRate returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasVideoFrameRate() bool {
	if o != nil && o.VideoFrameRate != nil {
		return true
	}

	return false
}

// SetVideoFrameRate gets a reference to the given string and assigns it to the VideoFrameRate field.
func (o *AssetNonStandardInputReasons) SetVideoFrameRate(v string) {
	o.VideoFrameRate = &v
}

// GetVideoResolution returns the VideoResolution field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetVideoResolution() string {
	if o == nil || o.VideoResolution == nil {
		var ret string
		return ret
	}
	return *o.VideoResolution
}

// GetVideoResolutionOk returns a tuple with the VideoResolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetVideoResolutionOk() (*string, bool) {
	if o == nil || o.VideoResolution == nil {
		return nil, false
	}
	return o.VideoResolution, true
}

// HasVideoResolution returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasVideoResolution() bool {
	if o != nil && o.VideoResolution != nil {
		return true
	}

	return false
}

// SetVideoResolution gets a reference to the given string and assigns it to the VideoResolution field.
func (o *AssetNonStandardInputReasons) SetVideoResolution(v string) {
	o.VideoResolution = &v
}

// GetPixelAspectRatio returns the PixelAspectRatio field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetPixelAspectRatio() string {
	if o == nil || o.PixelAspectRatio == nil {
		var ret string
		return ret
	}
	return *o.PixelAspectRatio
}

// GetPixelAspectRatioOk returns a tuple with the PixelAspectRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetPixelAspectRatioOk() (*string, bool) {
	if o == nil || o.PixelAspectRatio == nil {
		return nil, false
	}
	return o.PixelAspectRatio, true
}

// HasPixelAspectRatio returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasPixelAspectRatio() bool {
	if o != nil && o.PixelAspectRatio != nil {
		return true
	}

	return false
}

// SetPixelAspectRatio gets a reference to the given string and assigns it to the PixelAspectRatio field.
func (o *AssetNonStandardInputReasons) SetPixelAspectRatio(v string) {
	o.PixelAspectRatio = &v
}

// GetVideoEditList returns the VideoEditList field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetVideoEditList() string {
	if o == nil || o.VideoEditList == nil {
		var ret string
		return ret
	}
	return *o.VideoEditList
}

// GetVideoEditListOk returns a tuple with the VideoEditList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetVideoEditListOk() (*string, bool) {
	if o == nil || o.VideoEditList == nil {
		return nil, false
	}
	return o.VideoEditList, true
}

// HasVideoEditList returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasVideoEditList() bool {
	if o != nil && o.VideoEditList != nil {
		return true
	}

	return false
}

// SetVideoEditList gets a reference to the given string and assigns it to the VideoEditList field.
func (o *AssetNonStandardInputReasons) SetVideoEditList(v string) {
	o.VideoEditList = &v
}

// GetAudioEditList returns the AudioEditList field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetAudioEditList() string {
	if o == nil || o.AudioEditList == nil {
		var ret string
		return ret
	}
	return *o.AudioEditList
}

// GetAudioEditListOk returns a tuple with the AudioEditList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetAudioEditListOk() (*string, bool) {
	if o == nil || o.AudioEditList == nil {
		return nil, false
	}
	return o.AudioEditList, true
}

// HasAudioEditList returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasAudioEditList() bool {
	if o != nil && o.AudioEditList != nil {
		return true
	}

	return false
}

// SetAudioEditList gets a reference to the given string and assigns it to the AudioEditList field.
func (o *AssetNonStandardInputReasons) SetAudioEditList(v string) {
	o.AudioEditList = &v
}

// GetUnexpectedMediaFileParameters returns the UnexpectedMediaFileParameters field value if set, zero value otherwise.
func (o *AssetNonStandardInputReasons) GetUnexpectedMediaFileParameters() string {
	if o == nil || o.UnexpectedMediaFileParameters == nil {
		var ret string
		return ret
	}
	return *o.UnexpectedMediaFileParameters
}

// GetUnexpectedMediaFileParametersOk returns a tuple with the UnexpectedMediaFileParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetNonStandardInputReasons) GetUnexpectedMediaFileParametersOk() (*string, bool) {
	if o == nil || o.UnexpectedMediaFileParameters == nil {
		return nil, false
	}
	return o.UnexpectedMediaFileParameters, true
}

// HasUnexpectedMediaFileParameters returns a boolean if a field has been set.
func (o *AssetNonStandardInputReasons) HasUnexpectedMediaFileParameters() bool {
	if o != nil && o.UnexpectedMediaFileParameters != nil {
		return true
	}

	return false
}

// SetUnexpectedMediaFileParameters gets a reference to the given string and assigns it to the UnexpectedMediaFileParameters field.
func (o *AssetNonStandardInputReasons) SetUnexpectedMediaFileParameters(v string) {
	o.UnexpectedMediaFileParameters = &v
}

func (o AssetNonStandardInputReasons) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VideoCodec != nil {
		toSerialize["video_codec"] = o.VideoCodec
	}
	if o.AudioCodec != nil {
		toSerialize["audio_codec"] = o.AudioCodec
	}
	if o.VideoGopSize != nil {
		toSerialize["video_gop_size"] = o.VideoGopSize
	}
	if o.VideoFrameRate != nil {
		toSerialize["video_frame_rate"] = o.VideoFrameRate
	}
	if o.VideoResolution != nil {
		toSerialize["video_resolution"] = o.VideoResolution
	}
	if o.PixelAspectRatio != nil {
		toSerialize["pixel_aspect_ratio"] = o.PixelAspectRatio
	}
	if o.VideoEditList != nil {
		toSerialize["video_edit_list"] = o.VideoEditList
	}
	if o.AudioEditList != nil {
		toSerialize["audio_edit_list"] = o.AudioEditList
	}
	if o.UnexpectedMediaFileParameters != nil {
		toSerialize["unexpected_media_file_parameters"] = o.UnexpectedMediaFileParameters
	}
	return json.Marshal(toSerialize)
}

type NullableAssetNonStandardInputReasons struct {
	value *AssetNonStandardInputReasons
	isSet bool
}

func (v NullableAssetNonStandardInputReasons) Get() *AssetNonStandardInputReasons {
	return v.value
}

func (v *NullableAssetNonStandardInputReasons) Set(val *AssetNonStandardInputReasons) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetNonStandardInputReasons) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetNonStandardInputReasons) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetNonStandardInputReasons(val *AssetNonStandardInputReasons) *NullableAssetNonStandardInputReasons {
	return &NullableAssetNonStandardInputReasons{value: val, isSet: true}
}

func (v NullableAssetNonStandardInputReasons) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetNonStandardInputReasons) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


