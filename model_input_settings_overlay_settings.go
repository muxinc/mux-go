/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// InputSettingsOverlaySettings An object that describes how the image file referenced in url should be placed over the video (i.e. watermarking).
type InputSettingsOverlaySettings struct {
	// Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`
	VerticalAlign *string `json:"vertical_align,omitempty"`
	// The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top.
	VerticalMargin *string `json:"vertical_margin,omitempty"`
	// Where the horizontal positioning of the overlay/watermark should begin from.
	HorizontalAlign *string `json:"horizontal_align,omitempty"`
	// The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left.
	HorizontalMargin *string `json:"horizontal_margin,omitempty"`
	// How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height.
	Width *string `json:"width,omitempty"`
	// How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width.
	Height *string `json:"height,omitempty"`
	// How opaque the overlay should appear, expressed as a percent. (Default 100%)
	Opacity *string `json:"opacity,omitempty"`
}

// NewInputSettingsOverlaySettings instantiates a new InputSettingsOverlaySettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputSettingsOverlaySettings() *InputSettingsOverlaySettings {
	this := InputSettingsOverlaySettings{}
	return &this
}

// NewInputSettingsOverlaySettingsWithDefaults instantiates a new InputSettingsOverlaySettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputSettingsOverlaySettingsWithDefaults() *InputSettingsOverlaySettings {
	this := InputSettingsOverlaySettings{}
	return &this
}

// GetVerticalAlign returns the VerticalAlign field value if set, zero value otherwise.
func (o *InputSettingsOverlaySettings) GetVerticalAlign() string {
	if o == nil || o.VerticalAlign == nil {
		var ret string
		return ret
	}
	return *o.VerticalAlign
}

// GetVerticalAlignOk returns a tuple with the VerticalAlign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSettingsOverlaySettings) GetVerticalAlignOk() (*string, bool) {
	if o == nil || o.VerticalAlign == nil {
		return nil, false
	}
	return o.VerticalAlign, true
}

// HasVerticalAlign returns a boolean if a field has been set.
func (o *InputSettingsOverlaySettings) HasVerticalAlign() bool {
	if o != nil && o.VerticalAlign != nil {
		return true
	}

	return false
}

// SetVerticalAlign gets a reference to the given string and assigns it to the VerticalAlign field.
func (o *InputSettingsOverlaySettings) SetVerticalAlign(v string) {
	o.VerticalAlign = &v
}

// GetVerticalMargin returns the VerticalMargin field value if set, zero value otherwise.
func (o *InputSettingsOverlaySettings) GetVerticalMargin() string {
	if o == nil || o.VerticalMargin == nil {
		var ret string
		return ret
	}
	return *o.VerticalMargin
}

// GetVerticalMarginOk returns a tuple with the VerticalMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSettingsOverlaySettings) GetVerticalMarginOk() (*string, bool) {
	if o == nil || o.VerticalMargin == nil {
		return nil, false
	}
	return o.VerticalMargin, true
}

// HasVerticalMargin returns a boolean if a field has been set.
func (o *InputSettingsOverlaySettings) HasVerticalMargin() bool {
	if o != nil && o.VerticalMargin != nil {
		return true
	}

	return false
}

// SetVerticalMargin gets a reference to the given string and assigns it to the VerticalMargin field.
func (o *InputSettingsOverlaySettings) SetVerticalMargin(v string) {
	o.VerticalMargin = &v
}

// GetHorizontalAlign returns the HorizontalAlign field value if set, zero value otherwise.
func (o *InputSettingsOverlaySettings) GetHorizontalAlign() string {
	if o == nil || o.HorizontalAlign == nil {
		var ret string
		return ret
	}
	return *o.HorizontalAlign
}

// GetHorizontalAlignOk returns a tuple with the HorizontalAlign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSettingsOverlaySettings) GetHorizontalAlignOk() (*string, bool) {
	if o == nil || o.HorizontalAlign == nil {
		return nil, false
	}
	return o.HorizontalAlign, true
}

// HasHorizontalAlign returns a boolean if a field has been set.
func (o *InputSettingsOverlaySettings) HasHorizontalAlign() bool {
	if o != nil && o.HorizontalAlign != nil {
		return true
	}

	return false
}

// SetHorizontalAlign gets a reference to the given string and assigns it to the HorizontalAlign field.
func (o *InputSettingsOverlaySettings) SetHorizontalAlign(v string) {
	o.HorizontalAlign = &v
}

// GetHorizontalMargin returns the HorizontalMargin field value if set, zero value otherwise.
func (o *InputSettingsOverlaySettings) GetHorizontalMargin() string {
	if o == nil || o.HorizontalMargin == nil {
		var ret string
		return ret
	}
	return *o.HorizontalMargin
}

// GetHorizontalMarginOk returns a tuple with the HorizontalMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSettingsOverlaySettings) GetHorizontalMarginOk() (*string, bool) {
	if o == nil || o.HorizontalMargin == nil {
		return nil, false
	}
	return o.HorizontalMargin, true
}

// HasHorizontalMargin returns a boolean if a field has been set.
func (o *InputSettingsOverlaySettings) HasHorizontalMargin() bool {
	if o != nil && o.HorizontalMargin != nil {
		return true
	}

	return false
}

// SetHorizontalMargin gets a reference to the given string and assigns it to the HorizontalMargin field.
func (o *InputSettingsOverlaySettings) SetHorizontalMargin(v string) {
	o.HorizontalMargin = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *InputSettingsOverlaySettings) GetWidth() string {
	if o == nil || o.Width == nil {
		var ret string
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSettingsOverlaySettings) GetWidthOk() (*string, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *InputSettingsOverlaySettings) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given string and assigns it to the Width field.
func (o *InputSettingsOverlaySettings) SetWidth(v string) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *InputSettingsOverlaySettings) GetHeight() string {
	if o == nil || o.Height == nil {
		var ret string
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSettingsOverlaySettings) GetHeightOk() (*string, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *InputSettingsOverlaySettings) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given string and assigns it to the Height field.
func (o *InputSettingsOverlaySettings) SetHeight(v string) {
	o.Height = &v
}

// GetOpacity returns the Opacity field value if set, zero value otherwise.
func (o *InputSettingsOverlaySettings) GetOpacity() string {
	if o == nil || o.Opacity == nil {
		var ret string
		return ret
	}
	return *o.Opacity
}

// GetOpacityOk returns a tuple with the Opacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSettingsOverlaySettings) GetOpacityOk() (*string, bool) {
	if o == nil || o.Opacity == nil {
		return nil, false
	}
	return o.Opacity, true
}

// HasOpacity returns a boolean if a field has been set.
func (o *InputSettingsOverlaySettings) HasOpacity() bool {
	if o != nil && o.Opacity != nil {
		return true
	}

	return false
}

// SetOpacity gets a reference to the given string and assigns it to the Opacity field.
func (o *InputSettingsOverlaySettings) SetOpacity(v string) {
	o.Opacity = &v
}

func (o InputSettingsOverlaySettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VerticalAlign != nil {
		toSerialize["vertical_align"] = o.VerticalAlign
	}
	if o.VerticalMargin != nil {
		toSerialize["vertical_margin"] = o.VerticalMargin
	}
	if o.HorizontalAlign != nil {
		toSerialize["horizontal_align"] = o.HorizontalAlign
	}
	if o.HorizontalMargin != nil {
		toSerialize["horizontal_margin"] = o.HorizontalMargin
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.Opacity != nil {
		toSerialize["opacity"] = o.Opacity
	}
	return json.Marshal(toSerialize)
}

type NullableInputSettingsOverlaySettings struct {
	value *InputSettingsOverlaySettings
	isSet bool
}

func (v NullableInputSettingsOverlaySettings) Get() *InputSettingsOverlaySettings {
	return v.value
}

func (v *NullableInputSettingsOverlaySettings) Set(val *InputSettingsOverlaySettings) {
	v.value = val
	v.isSet = true
}

func (v NullableInputSettingsOverlaySettings) IsSet() bool {
	return v.isSet
}

func (v *NullableInputSettingsOverlaySettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputSettingsOverlaySettings(val *InputSettingsOverlaySettings) *NullableInputSettingsOverlaySettings {
	return &NullableInputSettingsOverlaySettings{value: val, isSet: true}
}

func (v NullableInputSettingsOverlaySettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputSettingsOverlaySettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


