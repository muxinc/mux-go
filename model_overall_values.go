/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// OverallValues struct for OverallValues
type OverallValues struct {
	Value *float64 `json:"value,omitempty"`
	TotalWatchTime *int64 `json:"total_watch_time,omitempty"`
	TotalViews *int64 `json:"total_views,omitempty"`
	GlobalValue *float64 `json:"global_value,omitempty"`
}

// NewOverallValues instantiates a new OverallValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOverallValues() *OverallValues {
	this := OverallValues{}
	return &this
}

// NewOverallValuesWithDefaults instantiates a new OverallValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOverallValuesWithDefaults() *OverallValues {
	this := OverallValues{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *OverallValues) GetValue() float64 {
	if o == nil || o.Value == nil {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverallValues) GetValueOk() (*float64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *OverallValues) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *OverallValues) SetValue(v float64) {
	o.Value = &v
}

// GetTotalWatchTime returns the TotalWatchTime field value if set, zero value otherwise.
func (o *OverallValues) GetTotalWatchTime() int64 {
	if o == nil || o.TotalWatchTime == nil {
		var ret int64
		return ret
	}
	return *o.TotalWatchTime
}

// GetTotalWatchTimeOk returns a tuple with the TotalWatchTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverallValues) GetTotalWatchTimeOk() (*int64, bool) {
	if o == nil || o.TotalWatchTime == nil {
		return nil, false
	}
	return o.TotalWatchTime, true
}

// HasTotalWatchTime returns a boolean if a field has been set.
func (o *OverallValues) HasTotalWatchTime() bool {
	if o != nil && o.TotalWatchTime != nil {
		return true
	}

	return false
}

// SetTotalWatchTime gets a reference to the given int64 and assigns it to the TotalWatchTime field.
func (o *OverallValues) SetTotalWatchTime(v int64) {
	o.TotalWatchTime = &v
}

// GetTotalViews returns the TotalViews field value if set, zero value otherwise.
func (o *OverallValues) GetTotalViews() int64 {
	if o == nil || o.TotalViews == nil {
		var ret int64
		return ret
	}
	return *o.TotalViews
}

// GetTotalViewsOk returns a tuple with the TotalViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverallValues) GetTotalViewsOk() (*int64, bool) {
	if o == nil || o.TotalViews == nil {
		return nil, false
	}
	return o.TotalViews, true
}

// HasTotalViews returns a boolean if a field has been set.
func (o *OverallValues) HasTotalViews() bool {
	if o != nil && o.TotalViews != nil {
		return true
	}

	return false
}

// SetTotalViews gets a reference to the given int64 and assigns it to the TotalViews field.
func (o *OverallValues) SetTotalViews(v int64) {
	o.TotalViews = &v
}

// GetGlobalValue returns the GlobalValue field value if set, zero value otherwise.
func (o *OverallValues) GetGlobalValue() float64 {
	if o == nil || o.GlobalValue == nil {
		var ret float64
		return ret
	}
	return *o.GlobalValue
}

// GetGlobalValueOk returns a tuple with the GlobalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverallValues) GetGlobalValueOk() (*float64, bool) {
	if o == nil || o.GlobalValue == nil {
		return nil, false
	}
	return o.GlobalValue, true
}

// HasGlobalValue returns a boolean if a field has been set.
func (o *OverallValues) HasGlobalValue() bool {
	if o != nil && o.GlobalValue != nil {
		return true
	}

	return false
}

// SetGlobalValue gets a reference to the given float64 and assigns it to the GlobalValue field.
func (o *OverallValues) SetGlobalValue(v float64) {
	o.GlobalValue = &v
}

func (o OverallValues) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.TotalWatchTime != nil {
		toSerialize["total_watch_time"] = o.TotalWatchTime
	}
	if o.TotalViews != nil {
		toSerialize["total_views"] = o.TotalViews
	}
	if o.GlobalValue != nil {
		toSerialize["global_value"] = o.GlobalValue
	}
	return json.Marshal(toSerialize)
}

type NullableOverallValues struct {
	value *OverallValues
	isSet bool
}

func (v NullableOverallValues) Get() *OverallValues {
	return v.value
}

func (v *NullableOverallValues) Set(val *OverallValues) {
	v.value = val
	v.isSet = true
}

func (v NullableOverallValues) IsSet() bool {
	return v.isSet
}

func (v *NullableOverallValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOverallValues(val *OverallValues) *NullableOverallValues {
	return &NullableOverallValues{value: val, isSet: true}
}

func (v NullableOverallValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOverallValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


