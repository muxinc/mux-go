/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// UpdateAssetMP4SupportRequest struct for UpdateAssetMP4SupportRequest
type UpdateAssetMP4SupportRequest struct {
	// String value for the level of mp4 support
	Mp4Support *string `json:"mp4_support,omitempty"`
}

// NewUpdateAssetMP4SupportRequest instantiates a new UpdateAssetMP4SupportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAssetMP4SupportRequest() *UpdateAssetMP4SupportRequest {
	this := UpdateAssetMP4SupportRequest{}
	return &this
}

// NewUpdateAssetMP4SupportRequestWithDefaults instantiates a new UpdateAssetMP4SupportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAssetMP4SupportRequestWithDefaults() *UpdateAssetMP4SupportRequest {
	this := UpdateAssetMP4SupportRequest{}
	return &this
}

// GetMp4Support returns the Mp4Support field value if set, zero value otherwise.
func (o *UpdateAssetMP4SupportRequest) GetMp4Support() string {
	if o == nil || o.Mp4Support == nil {
		var ret string
		return ret
	}
	return *o.Mp4Support
}

// GetMp4SupportOk returns a tuple with the Mp4Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAssetMP4SupportRequest) GetMp4SupportOk() (*string, bool) {
	if o == nil || o.Mp4Support == nil {
		return nil, false
	}
	return o.Mp4Support, true
}

// HasMp4Support returns a boolean if a field has been set.
func (o *UpdateAssetMP4SupportRequest) HasMp4Support() bool {
	if o != nil && o.Mp4Support != nil {
		return true
	}

	return false
}

// SetMp4Support gets a reference to the given string and assigns it to the Mp4Support field.
func (o *UpdateAssetMP4SupportRequest) SetMp4Support(v string) {
	o.Mp4Support = &v
}

func (o UpdateAssetMP4SupportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mp4Support != nil {
		toSerialize["mp4_support"] = o.Mp4Support
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateAssetMP4SupportRequest struct {
	value *UpdateAssetMP4SupportRequest
	isSet bool
}

func (v NullableUpdateAssetMP4SupportRequest) Get() *UpdateAssetMP4SupportRequest {
	return v.value
}

func (v *NullableUpdateAssetMP4SupportRequest) Set(val *UpdateAssetMP4SupportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAssetMP4SupportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAssetMP4SupportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAssetMP4SupportRequest(val *UpdateAssetMP4SupportRequest) *NullableUpdateAssetMP4SupportRequest {
	return &NullableUpdateAssetMP4SupportRequest{value: val, isSet: true}
}

func (v NullableUpdateAssetMP4SupportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAssetMP4SupportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


