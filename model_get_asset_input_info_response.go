/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package muxgo

import (
	"encoding/json"
)

// GetAssetInputInfoResponse struct for GetAssetInputInfoResponse
type GetAssetInputInfoResponse struct {
	Data *[]InputInfo `json:"data,omitempty"`
}

// NewGetAssetInputInfoResponse instantiates a new GetAssetInputInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAssetInputInfoResponse() *GetAssetInputInfoResponse {
	this := GetAssetInputInfoResponse{}
	return &this
}

// NewGetAssetInputInfoResponseWithDefaults instantiates a new GetAssetInputInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAssetInputInfoResponseWithDefaults() *GetAssetInputInfoResponse {
	this := GetAssetInputInfoResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetAssetInputInfoResponse) GetData() []InputInfo {
	if o == nil || o.Data == nil {
		var ret []InputInfo
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssetInputInfoResponse) GetDataOk() (*[]InputInfo, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetAssetInputInfoResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []InputInfo and assigns it to the Data field.
func (o *GetAssetInputInfoResponse) SetData(v []InputInfo) {
	o.Data = &v
}

func (o GetAssetInputInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetAssetInputInfoResponse struct {
	value *GetAssetInputInfoResponse
	isSet bool
}

func (v NullableGetAssetInputInfoResponse) Get() *GetAssetInputInfoResponse {
	return v.value
}

func (v *NullableGetAssetInputInfoResponse) Set(val *GetAssetInputInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAssetInputInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAssetInputInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAssetInputInfoResponse(val *GetAssetInputInfoResponse) *NullableGetAssetInputInfoResponse {
	return &NullableGetAssetInputInfoResponse{value: val, isSet: true}
}

func (v NullableGetAssetInputInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAssetInputInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


